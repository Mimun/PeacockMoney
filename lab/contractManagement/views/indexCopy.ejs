<!DOCTYPE html>
<html>

<head>
  <title>Contract Management</title>
  <link rel='stylesheet' href='/stylesheets/style.css' />

</head>

<body>
  <%- include('../Components/navbar.ejs') %>

  <div class="d-flex" id="wrapper">
    <%- include('../Components/sideBar.ejs') %>
    <div id="page-content-wrapper">
      <main style="padding: 5%;">
        <template id="temp_contract">
          <div class="align-items-stretch object-div" c-data="true">
            <div class="card object-div" c-data="true" style="width: 24rem; margin-bottom: 15px;">
              <img class="card-img-top" src="" alt="Card image cap">
              <div class="card-body">
                <h5 class="card-title"></h5>
                <p class="card-text"></p>
              </div>
            </div>
          </div>

        </template>

        <template id="contract_detail">
          <%- include('templateDetailscopy.ejs') %>
        </template>

        <header>
          <h2>
            <b>Mẫu hợp đồng</b>
          </h2>
        </header>
        <submain>
          <div id="template-handler" class="card-deck"></div>
          <button type="button" class="btn btn-primary btn-sm" id="chooseTemplate">Chọn mẫu hợp đồng</button>
          <button class="btn btn-raised btn-primary btn-sm" id="redirect-page">Danh sách hợp đồng</button>
        </submain>
      </main>

      <div class="container-fluid">
        <!-- Modal -->

        <!-- Central Modal Small -->
        <div class="modal fade" id="centralModalSm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
          aria-hidden="true">

          <!-- Change class .modal-sm to change the size of the modal -->
          <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <h4 class="modal-title w-100 title" id="myModalLabel">Chọn mẫu hợp đống</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <div class="modal-body">
                <h2>I am going to add a dynamic content here</h2>
              </div>
              <div class="modal-footer">
                <div class="btn-options d-flex">
                  <!-- <button class="btn btn-primary btn-sm" id="btn-confirm">Confirm</button> -->

                </div>
              </div>
            </div>
          </div>
        </div>
        <!-- Central Modal Small -->
      </div>


    </div>
  </div>

  <script type="module">
    import { generateContractTemplateCard } from '/generateContractTemplateCard.js'
    import { ObjectId } from '/createMongooseID.js'
    import { findNestedObj } from '/findNestedObj.js'
    import { makeRequest } from '/makeRequest.js'
    import { addSeparatorOnInputChange, removeSeperator } from '/addSeparatorOnInputChange.js'

    const types = <%- JSON.stringify(types) %>;
    const payOptions = <%- JSON.stringify(payOptions) %>;
    console.log('All types: ', types)
    console.log('All types: ', payOptions)

    const contractTemplate = document.getElementById('temp_contract');
    const modalFooter = document.querySelector('.modal-footer')
    const modalBody = document.querySelector('.modal-body')
    const buttonOptions = modalFooter.querySelector('.btn-options')

    const createSelect = (itemObjs, elementName, variable) => {
      const select = document.createElement('select')
      select.className = `browser-default custom-select ${variable}`
      select.id = variable
      select.style.margin = '0 0 2vh 0'
      // "all" option
      const option = document.createElement('option')
      option.value = ""
      option.innerHTML = "All"
      option.setAttribute('selected', '')
      select.appendChild(option)
      itemObjs.forEach(itemObj => {
        const option = document.createElement('option')
        option.value = itemObj
        option.innerHTML = itemObj.charAt(0).toUpperCase() + itemObj.slice(1)
        select.appendChild(option)
      })
      // "create new option"
      // if(variable === 'types'){
      //   const option2 = document.createElement('option')
      //   option2.value = "addNew"
      //   option2.innerHTML = "Thêm mới..."
        
      //   select.appendChild(option2)
      // }

      // select.addEventListener('change', event=>{
      //   if(event.target.value === 'addNew'){
      //     window.location.href = variable === 'types'? `/systemMng/itemType?token=${window.localStorage.getItem('accessToken')}`: `#`

      //   }
      // })
     
      document.querySelector('' + elementName + '').appendChild(select)

    }

    // render selector
    $("#centralModalSm").on('show.bs.modal', () => {
      const containerFluid = document.querySelector('.container-fluid')
      containerFluid.querySelector('.modal-title').innerHTML = "Choose your contract template"
      if (modalBody.firstChild) {
        modalBody.innerHTML = ""
      }

      // create selector
      const typeTitle = document.createElement('p')
      typeTitle.innerHTML = 'Loại tài sản'
      modalBody.appendChild(typeTitle)
      createSelect(types, '.modal-body', 'types')

      const payMethodTitle = document.createElement('p')
      payMethodTitle.innerHTML = 'Kiểu thanh toán'
      modalBody.appendChild(payMethodTitle)
      createSelect(payOptions, '.modal-body', 'payOptions')

      const inputDiv = document.createElement('div')
      inputDiv.className = "form-group"
      inputDiv.innerHTML = `
      <label for="form1" class="bmd-label-floating">Số tiền vay</label>
      <input type="text" id="form1" class="form-control" data-type="currency">
        `
      inputDiv.style.margin = '0 0 2vh 0'
      inputDiv.style.width = '100%'
      modalBody.appendChild(inputDiv)

      if (JSON.parse(window.localStorage.getItem('evaluatingItem'))) {
        var evaluatingItem = JSON.parse(window.localStorage.getItem('evaluatingItem'))
        console.log('evaluating item: ', evaluatingItem)
        var evaluatingItemType = findNestedObj(evaluatingItem, 'name', 'itemType').value
        if (types.includes(evaluatingItemType)) {
          document.querySelector('.types').value = evaluatingItemType
          document.querySelector('.types').disabled = false
        } else {
          document.querySelector('.types').value = ''
          document.querySelector('.types').disabled = false
        }
      }

      const confirmButton = document.createElement('button')
      confirmButton.className = "btn btn-sm btn-primary"
      confirmButton.innerHTML = "Confirm"
      while (buttonOptions.firstChild) {
        buttonOptions.removeChild(buttonOptions.lastChild)
      }
      confirmButton.addEventListener('click', (event) => {
        var chosenType = document.querySelector('.types').value
        var chosenPayOption = document.querySelector('.payOptions').value
        console.log('chosen option: ', chosenPayOption)
        console.log('chosen type: ', chosenType)
        // console.log('chosen amount of money: ', parseInt(document.querySelector('modal-body').querySelector('input').value))
        const callback = (results) => {
          document.querySelector('#template-handler').innerHTML = ""
          results.forEach(result => {
            generateContractTemplateCard(result, contractTemplate, 'template-handler')
          })
          templateButtonOption()
          $("#centralModalSm").modal('hide')
        }

        // POST request
        makeRequest('POST', 'findContractTemplates', 'application/json', JSON.stringify({
          chosenType: chosenType,
          chosenPayOption: chosenPayOption,
          amountOfMoney: removeSeperator(modalBody.querySelector('input').value)
        }), callback)
      })
      buttonOptions.appendChild(confirmButton)
      addSeparatorOnInputChange()

    })

    $("#centralModalSm").modal('show');

    document.querySelector('#chooseTemplate').addEventListener('click', (event) => {
      $("#centralModalSm").modal('show');
      addSeparatorOnInputChange()

    })

    // remove delete template button on employee level uses
    const templateButtonOption = () => {
      // detail template info
      document.querySelectorAll('.object-div').forEach(element => {
        element.addEventListener('click', function (event) {
          console.log('modal footer: ', document.querySelector('.modal-footer'))
          var modalFooter = document.querySelector('.modal-footer')
          if (modalFooter.querySelector('#btn-delete-contract-template')) {
            modalFooter.querySelector('.btn-options').removeChild(modalFooter.querySelector('#btn-delete-contract-template'))

          }

        })
      })
    }
    templateButtonOption()

    // contract list button
    var redirectBtn = document.querySelector('#redirect-page').addEventListener('click', () => {
      window.location.href = "contracts?token="+window.localStorage.getItem('accessToken')

    })

  </script>
</body>

</html>