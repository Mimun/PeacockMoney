<!DOCTYPE html>
<html>

<head>
  <title>Contract Management</title>
  <link rel='stylesheet' href='/stylesheets/style.css' />

</head>

<body>
  <%- include('../../evaluationMng/views/navbar.ejs')  %>

  <div class="d-flex" id="wrapper">
    <%- include('../../evaluationMng/views/sideBar.ejs') %>
    <div id="page-content-wrapper">
      <main style="padding: 5%;">
        <template id="temp_contract">
          <!-- Column -->
          <div class="col mb-4 d-flex align-items-stretch object-div" c_data="true" style="margin: 14px 0px;">
            <!--Card-->
            <div class="card" style="width: 100%;">

              <!--Card image-->
              <div class="view overlay">
                <img class="card-img-top" alt="Card image cap">
                <a href="#">
                  <div class="mask rgba-white-slight"></div>
                </a>
              </div>

              <!--Card content-->
              <div class="card-body">
                <!--Title-->
                <h4 class="card-title"></h4>
                <!--Text-->
                <p class="card-text"></p>
              </div>

            </div>
            <!--/.Card-->

        </template>

        <template id="contract_detail">
          <%- include('templateDetailscopy.ejs') %>
        </template>

        <header>
          <h2>
            <b>Quản lý và Tạo mau hợp đồng</b>
          </h2>
        </header>
        <submain>
          <div id="template-handler" class="row row-cols-1 row-cols-md-3"></div>
          <button type="button" class="btn btn-primary btn-sm" id="chooseTemplate">Choose contract template</button>
          <button class="btn btn-default btn-sm" id="redirect-page">Contract List</button>
        </submain>
      </main>

      <div class="container-fluid">
        <!-- Modal -->

        <!-- Central Modal Small -->
        <div class="modal fade" id="centralModalSm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
          aria-hidden="true">

          <!-- Change class .modal-sm to change the size of the modal -->
          <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <h4 class="modal-title w-100 title" id="myModalLabel">Create new contract template</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <div class="modal-body">
                <modal-body style="width: fit-content;">
                  <!-- Adding dynamic content here -->
                  <h2>I am going to add a dynamic content here</h2>
                </modal-body>
              </div>
              <div class="modal-footer">
                <button class="btn btn-primary btn-sm" id="btn-confirm">Confirm</button>
              </div>
            </div>
          </div>
        </div>
        <!-- Central Modal Small -->
      </div>


    </div>
  </div>

  <script type="module">
    import { generateContractTemplateCard } from '/generateContractTemplateCard.js'
    import { ObjectId } from '/createMongooseID.js'
    import { findNestedObj } from '/findNestedObj.js'

    const types = <%- JSON.stringify(types) %>;
    const payOptions = <%- JSON.stringify(payOptions) %>;
    console.log('All types: ', types)
    console.log('All types: ', payOptions)

    // if (document.referrer !== "http://localhost:3000/evaluationMng/") {
    //   window.localStorage.removeItem('evaluatingItem')
    // }

    const contractTemplate = document.getElementById('temp_contract');

    const createSelect = (itemObjs, elementName, variable) => {
      const select = document.createElement('select')
      select.className = `browser-default custom-select ${variable}`
      select.id = variable
      select.style.margin = '0 0 2vh 0'
      // "all" option
      const option = document.createElement('option')
      option.value = ""
      option.innerHTML = "All"
      option.setAttribute('selected', '')
      select.appendChild(option)
      itemObjs.forEach(itemObj => {
        const option = document.createElement('option')
        option.value = itemObj
        option.innerHTML = itemObj.charAt(0).toUpperCase() + itemObj.slice(1)
        select.appendChild(option)
      })
      document.querySelector('' + elementName + '').appendChild(select)

    }

    // render selector
    $("#centralModalSm").on('show.bs.modal', () => {
      const containerFluid = document.querySelector('.container-fluid')
      containerFluid.querySelector('.modal-title').innerHTML = "Choose your contract template"
      document.querySelector('modal-body').innerHTML = ""

      // create selector
      const typeTitle = document.createElement('p')
      typeTitle.innerHTML = 'Loai tai san'
      document.querySelector('modal-body').appendChild(typeTitle)
      createSelect(types, 'modal-body', 'types')

      const payMethodTitle = document.createElement('p')
      payMethodTitle.innerHTML = 'Kieu thanh toan'
      document.querySelector('modal-body').appendChild(payMethodTitle)
      createSelect(payOptions, 'modal-body', 'payOptions')

      const inputDiv = document.createElement('div')
      inputDiv.className = "md-form"
      inputDiv.innerHTML = `<input type="number" id="form1" class="form-control">
        <label for="form1">So tien vay</label>`
      inputDiv.style.margin = '0 0 2vh 0'
      inputDiv.style.width = '100%'
      document.querySelector('modal-body').appendChild(inputDiv)

      if (JSON.parse(window.localStorage.getItem('evaluatingItem'))) {
        var evaluatingItem = JSON.parse(window.localStorage.getItem('evaluatingItem'))
        console.log('evaluating item: ', evaluatingItem)
        var evaluatingItemType = findNestedObj(evaluatingItem, 'name', 'itemType').value
        if(types.includes(evaluatingItemType)){
          document.querySelector('.types').value = evaluatingItemType
          document.querySelector('.types').disabled = true
        } else {
          document.querySelector('.types').disabled = false
        }
      }

      document.querySelector('#btn-confirm').addEventListener('click', (event) => {
        var chosenType = document.querySelector('.types').value
        var chosenPayOption = document.querySelector('.payOptions').value
        console.log('chosen option: ', chosenPayOption)
        console.log('chosen type: ', chosenType)
        // console.log('chosen amount of money: ', parseInt(document.querySelector('modal-body').querySelector('input').value)

        $.ajax({
          type: 'POST',
          url: 'findContractTemplates',
          contentType: 'application/json',
          data: JSON.stringify({
            chosenType: chosenType,
            chosenPayOption: chosenPayOption,
            amountOfMoney: parseInt(document.querySelector('modal-body').querySelector('input').value)
          }),
          success: results => {
            console.log(results)
            document.querySelector('#template-handler').innerHTML = ""
            results.forEach(result => {
              generateContractTemplateCard(result, contractTemplate, 'template-handler')
            })
            templateButtonOption()
            $("#centralModalSm").modal('hide')
          }
        })
      })


    })
    $("#centralModalSm").modal('show');


    document.querySelector('#chooseTemplate').addEventListener('click', (event) => {
      $("#centralModalSm").modal('show');

    })

    const templateButtonOption = () => {
      // detail template info
      document.querySelectorAll('.object-div').forEach(element => {
        element.addEventListener('click', function () {
          console.log('event abc: ', document.querySelector('modal-body'))
          var modalBody = document.querySelector('modal-body')
          modalBody.querySelector('.btn-options').removeChild(modalBody.querySelector('#btn-delete-contract-template'))
        })
      })
    }

    templateButtonOption()





  </script>
</body>

</html>