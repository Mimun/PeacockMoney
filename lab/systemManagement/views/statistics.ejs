<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
</head>

<body>
  <%- include('../Components/navbar.ejs') %>

  <div class="d-flex" id="wrapper">
    <%- include('../Components/sideBar.ejs') %>

    <div id="page-content-wrapper">
      <h2>Statistic/Report</h2>
      <!-- property table -->
      <div id="property-list-container" class="list-container">
        <table class="table table-hover table-bordered table-responsive table-stripped table-responsive">
          <thead>
            <tr>
              <th data-resizable-column-id="warehouseId">Ma kho</th>
              <th data-resizable-column-id="name">Ten kho</th>
              <th data-resizable-column-id="contractId">Ma hop dong</th>
              <th data-resizable-column-id="itemTypeId">Ma loai tai san</th>
              <th data-resizable-column-id="propertyId">Ma tai san</th>
              <th data-resizable-column-id="name">Ten tai san</th>
            </tr>
          </thead>
          <tbody></tbody>
        </table>
      </div>
      <!-- modal -->
      <div class="modal" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-md" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">Modal title</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body">
              <!-- type of report -->
              <label for="form-radio-report-type">Report type</label>
              <form action="" id="form-radio-report-type">
                <div class="radio">
                  <label>
                    <input type="radio" name="optionsRadios" id="importReport" value="import" checked>
                    Imported Property Report
                  </label>
                </div>
                <div class="radio">
                  <label>
                    <input type="radio" name="optionsRadios" id="exportReport" value="export">
                    Exported Property Report
                  </label>
                </div>
              </form>
              <!-- type of report -->
              <label for="form-radio-report-time">Report time</label>
              <form action="" id="form-radio-report-time">
                <div class="radio">
                  <label>
                    <input type="radio" name="optionsRadios" id="today" value="today" checked>
                    Get today report
                  </label>
                </div>
                <div class="radio">
                  <label>
                    <input type="radio" name="optionsRadios" id="fromTo" value="fromTo">
                    Get reports from-to
                    <div class="form-inline date-selector"></div>
                  </label>
                </div>
              </form>

              <!-- warehouse selector -->
              <div class="select-container"></div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-primary" id="submit">Submit</button>
            </div>
          </div>
        </div>
      </div>

    </div>
  </div>
  <script type="module">
    import { makeRequest } from "/makeRequest.js"
    import { createSelect } from "/createSelect.js"
    import { generateImportingReport, generateExportingReport } from '/generatePropertyInStatistic.js'

    var warehouseList = <%- JSON.stringify(warehouseList) %>;
    console.log('warehouse lsit: ', warehouseList)

    var csv = ""

    // select parts
    var selectContainer = document.createElement('div')
    selectContainer.className = 'select-container'

    var select = document.createElement('select')
    select.className = "browser-default custom-select"

    var selectLabel = document.createElement('label')

    var selectOption = warehouseList.map(warehouse => {
      var option = `<option value="${warehouse._id}">${warehouse.name}-${warehouse.address}</option>`
      return option
    })
    selectOption.unshift('<option value="">All warehouses</option>')
    // end of select parts

    // show modal when browser loading
    $('.modal').modal('show')

    var inputtoday = document.querySelector('form#form-radio-report-time').querySelector('input#today')
    var inputfromTo = document.querySelector('form#form-radio-report-time').querySelector('input#fromTo')

    // event when option 1 is clicked
    inputtoday.addEventListener('click', (event) => {
      document.querySelector('.date-selector').innerHTML = ''
      // remove "all warehouse" option 
      document.querySelector('#warehouse-select').querySelectorAll('option').forEach(option => {
        if (option.value === "") {
          option.style.display = 'block'
          document.querySelector('#warehouse-select').value = option.value
        }

      })
    })

    // event when option 2 is clicked
    inputfromTo.addEventListener('click', (event) => {
      console.log('event: ', event.target.checked)
      // create input date to select date
      var from = document.createElement('input')
      from.className = "form-control"
      from.id = 'from'
      from.type = 'date'

      var to = document.createElement('input')
      to.className = "form-control"
      to.id = 'to'
      to.type = 'date'
      if (document.querySelector('.date-selector').firstChild === null) {
        document.querySelector('.date-selector').appendChild(from)
        document.querySelector('.date-selector').appendChild(to)
      }
      // remove "all warehouse" option 
      document.querySelector('#warehouse-select').querySelectorAll('option').forEach(option => {
        if (option.value === "") {
          option.style.display = 'none'
          document.querySelector('#warehouse-select').value = document.querySelector('#warehouse-select')[1].value
        }
      })
    })

    // warehouse selector
    if (document.querySelector('.select-container').firstChild === null) {
      createSelect(select, '', 'warehouse-select', 'select-warehouse',
        selectOption, selectLabel, 'Kho', selectContainer, document.querySelector('.select-container'), false)
    }

    // find property|submit button event
    document.querySelector('button#submit').addEventListener('click', (event) => {
      var getWarehouseReportObj = {
        warehouses: document.querySelector('#warehouse-select').value,
        dateConditions: {}
      }
      // report time checked radio
      var reportTimeCheckedRadio = document.querySelector('form#form-radio-report-time').querySelector('input[type="radio"]:checked').value
      console.log('report time: ', reportTimeCheckedRadio)

      if (reportTimeCheckedRadio === "fromTo") {
        document.querySelector('form#form-radio-report-time').querySelectorAll('input[type="date"]').forEach(input => {
          getWarehouseReportObj.dateConditions[input.id] = input.value
        })
      }

      // report type checked radio
      var reportTypeCheckedRadio = document.querySelector('form#form-radio-report-type').querySelector('input[type="radio"]:checked').value
      console.log('report type: ', reportTypeCheckedRadio)

      makeRequest('POST', `statistic/${reportTypeCheckedRadio}`, 'application/json', JSON.stringify(getWarehouseReportObj), callback)

    })

    // callback function for request
    const callback = (result) => {
      result.reportType === 'import'? 
      generateImportingReport(result.result, warehouseList, 'property-list-container') : 
      generateExportingReport(result.result, warehouseList, 'property-list-container') 

      $(".modal").modal('hide')
      var exportBtn = document.querySelector('button')
      exportBtn.className = 'btn btn-sm btn-primary'
      exportBtn.id = 'export'
      exportBtn.innerHTML = 'export'
      exportBtn.addEventListener('click', (event) => {
        exportCSV(result.csv)
      })
      document.querySelector('#page-content-wrapper').appendChild(exportBtn)

    }

    // export csv function
    const exportCSV = (csv) => {
      var blob = new Blob([csv], { type: 'application/vnd.ms-excel' })
      var link = document.createElement('a')
      link.href = URL.createObjectURL(blob)
      link.download = 'abc.csv'
      link.click()
    }

  </script>
</body>

</html>