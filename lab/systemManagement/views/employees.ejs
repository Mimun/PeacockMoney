<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <style>
    img {
      max-width: 240px;
    }

    .form-group {
      width: fit-content;
      min-width: 201px;
    }

    .select-container {
      width: 201px;
      margin-bottom: 1rem;
    }

    .modal-content .modal-footer .btn {
      margin: 0 8px;
    }

    .list-group-item:first-child {
      margin-right: 0 !important;
    }

    .list-group {
      width: fit-content;
      margin: auto;
    }

    .bmd-list-group-col {
      width: 160px;
    }

    .avatar {
      width: 40px;
      height: 40px;
      object-fit: cover;
    }
  </style>
</head>

<body>
  <%- include('../Components/navbar.ejs') %>
  <div class="d-flex" id="wrapper">
    <%- include('../Components/sideBar.ejs') %>
    <!-- create employee template for modal -->
    <template id="create-employee-template">
      <div class="modal-header text-center">
        <h4 class="modal-title w-100 font-weight-bold">Tao moi nhan vien</h4>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body mx-3 object-div d-flex justify-content-between flex-wrap">
        <div class="cropper-container" style="width: 100%; padding: 0 18%;">
          <cropper-wc title="abc"></cropper-wc>
        </div>
        <div class="form-group">
          <label data-error="wrong" data-success="right" class="bmd-label-floating">Ho ten</label>
          <input type="text" class="form-control validate active" name="name" data-vie="hoTen"
            data-kor="koreanString">
        </div>

        <div class="form-group">
          <label data-error="wrong" data-success="right" class="bmd-label-floating">Ma nhan vien</label>
          <input type="text" class="form-control validate active" name="id" data-vie="maNhanVien"
            data-kor="koreanString">
        </div>

        <div class="form-group">
          <label data-error="wrong" data-success="right" class="bmd-label-floating">Ngay sinh</label>
          <input type="date" class="form-control validate active" name="dateOfBirth" data-vie="ngaySinh"
            data-kor="koreanString">
        </div>

        <div class="form-group">
          <label data-error="wrong" data-success="right" class="bmd-label-floating">Ngay vao cong ty</label>
          <input type="date" class="form-control validate active" name="joiningDate" data-vie="ngayVaoCongTy"
            data-kor="koreanString">
        </div>

        <div class="form-group">
          <label data-error="wrong" data-success="right" class="bmd-label-floating">Chuc vu</label>
          <input type="text" class="form-control validate active" name="jobTitle" data-vie="chucVu"
            data-kor="koreanString">
        </div>

        <div class="form-group">
          <label data-error="wrong" data-success="right" class="bmd-label-floating">Dia chi</label>
          <input type="text" class="form-control validate" name="address" data-vie="diaChi" data-kor="koreanString">

        </div>

        <div class="form-group">
          <label data-error="wrong" data-success="right" class="bmd-label-floating">Cmnd</label>
          <input type="text" class="form-control validate" name="idCard" data-vie="CMND" data-kor="koreanString">
        </div>

        <div class="form-group">
          <label data-error="wrong" data-success="right" class="bmd-label-floating">Ngay cap</label>
          <input type="date" class="form-control validate" name="providingDate" data-vie="ngayCap"
            data-kor="koreanString">
        </div>

        <div class="form-group">
          <label data-error="wrong" data-success="right" class="bmd-label-floating">Noi cap</label>
          <input type="text" class="form-control validate" name="providingPlace" data-vie="noiCap"
            data-kor="koreanString">
        </div>

        <div class="form-group">
          <label data-error="wrong" data-success="right" class="bmd-label-floating">So dien thoai</label>
          <input type="number" class="form-control validate" name="phoneNumber" data-vie="soDienThoai"
            data-kor="koreanString">
        </div>

        <div class="form-group">
          <label data-error="wrong" data-success="right" class="bmd-label-floating">Email</label>
          <input type="email" class="form-control validate" name="email" data-vie="email" data-kor="koreanString">
        </div>

        <div class="form-group">
          <label data-error="wrong" data-success="right" class="bmd-label-floating">Ghi chu</label>
          <input type="text" class="form-control validate" name="note" data-vie="ghiChu" data-kor="koreanString">
        </div>

        <div class="form-group">
          <label data-error="wrong" data-success="right" class="bmd-label-floating">Mat Khau</label>
          <input type="text" class="form-control validate" name="password" data-vie="matKhau" data-kor="koreanString"
            value="12345">
        </div>
      </div>
      <div class="modal-footer d-flex justify-content-center">
        <button class="btn btn-outline-primary" id="btn-create-employee">Create</button>
      </div>

    </template>

    <div id="page-content-wrapper">
      <h2>List of employees</h2>
      <!-- input file -->
      <div class="file-input-container">
        <div class="form-group">
          <label for="file" class="bmd-label-floating">File input</label>
          <input type="file" class="form-control-file" id="file" accept=".csv">
        </div>
      </div>

      <!-- Search form -->
      <div class="search-container">
        <form id="form-search">
          <div class="form-group">
            <input type="text" class="form-control" id="search" placeholder="Search...">
          </div>
        </form>
      </div>

      <div id="employee-table-container" class="table-container ">
        <table class="table table-hover table-bordered table-responsive table-striped"
          data-resizable-columns-id="demo-table-v2">
          <thead>
            <tr>
              <th data-resizable-column-id="avatar">Anh dai dien</th>
              <th data-resizable-column-id="customId">Ma nhan vien</th>
              <th data-resizable-column-id="name">Ten nhan vien</th>
              <th data-resizable-column-id="dateOfBirth">Ngay sinh</th>
              <th data-resizable-column-id="joiningDate">Ngay vao cong ty</th>
              <th data-resizable-column-id="jobTitle">Chuc vu</th>
              <th data-resizable-column-id="workingAddress">Dia diem lam viec</th>
              <th data-resizable-column-id="phoneNumber">So dien thoai</th>

            </tr>
          </thead>
          <tbody></tbody>
        </table>
      </div>
      <button class="btn btn-raised btn-primary btn-sm" id="create-new-employee">Create new employee</button>
      <button class="btn btn-primary btn-sm" id="upload-employees" style="display: none;">Upload</button>


      <!-- modal to create new employee -->
      <div class="modal fade" id="modalContactForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
        aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
          <div class="modal-content">
          </div>
        </div>
      </div>
    </div>
  </div>

  <script type="module">
    import { generateEmployeeManagementList, createSelect } from '/generateEmployeeManagementList.js'
    import { makeRequest } from '/makeRequest.js'
    import { employeeMetadataSample } from '/employeeConfig.js'
    const employeeList = <%- JSON.stringify(employeeList) %>;
    const storeList = <%- JSON.stringify(storeList) %>;
    const roleAbility = <%- JSON.stringify(roleAbility) %>;
    const user = JSON.parse(window.localStorage.getItem('user'))

    console.log('employee list: ', employeeList)
    console.log('store list: ', storeList)

    const modalContent = document.querySelector('#modalContactForm').querySelector('.modal-content')

    if (employeeList.length !== 0) {
      generateEmployeeManagementList(employeeList, storeList, 'employee-table-container', 'employees', user, roleAbility)
    }

    var selectContainer = document.createElement('div')
    selectContainer.className = 'select-container'

    var select = document.createElement('select')
    select.className = "browser-default custom-select"

    var selectLabel = document.createElement('label')

    // store select options
    var storeSelectOptions = []
    storeSelectOptions.push('<option value="">No store</option>')
    if (storeList !== 0) {
      storeList.map(select => {
        var option = `<option name="store" data-vie="cuaHang" data-kor="koreanString" value=${select.id}>${select.name} - ${select.address}</option>`
        storeSelectOptions.push(option)
      })
    }

    // role select options
    var roleSelectOptions = `
      <option name="role" value="member" data-vie="chucVu" data-kor="koreanString" selected>Member</option>
      <option name="role" value="admin" data-vie="chucVu" data-kor="koreanString">Admin</option>
      <option name="role" value="superAdmin" data-vie="chucVu" data-kor="koreanString">Super Admin</option>
      <option name="role" value="root" data-vie="chucVu" data-kor="koreanString">Root</option>

    `

    // create new employee button
    document.querySelector('#create-new-employee').addEventListener('click', (event) => {
      if (user.role === "root" || user.role === "superAdmin" || user.role === "admin") {
        $("#modalContactForm").on('show.bs.modal', () => {
          const createEmployee = document.querySelector('#create-employee-template').content.cloneNode(true)

          createEmployee.querySelector("#btn-create-employee").addEventListener('click', (event) => {
            var employeeObj = {
              metadata: [],
              infos: [],
            }
            employeeObj.metadata.push({
              cType: 'image',
              dataKor: 'koreanString',
              name: 'avatar',
              value: event.target.closest('.modal-content').querySelector('.modal-body').querySelector('cropper-wc').getImageData(),
              dataVie: 'anhDaiDien'
            })
            event.target.closest('.modal-content').querySelector('.modal-body').querySelectorAll('input').forEach(input => {
              employeeObj.metadata.push({
                cType: input.type,
                dataKor: input.getAttribute('data-kor'),
                name: input.getAttribute('name'),
                value: input.value,
                dataVie: input.getAttribute('data-vie')
              })

            })
            event.target.closest('.modal-content').querySelector('.modal-body').querySelectorAll('select').forEach(select => {
              employeeObj.metadata.push({
                name: select.getAttribute('name'),
                value: select.value,
                cType: 'select',
                dataVie: select.getAttribute('data-vie'),
                dataKor: select.getAttribute('data-kor')
              })
            })
            console.log('input: ', employeeObj)
            makeRequest('POST', 'employees', 'application/json', JSON.stringify(employeeObj), () => {
              window.location.reload()
            })
          })
          modalContent.innerHTML = ''
          modalContent.appendChild(createEmployee)
          modalContent.querySelector('.modal-body').appendChild(createSelect(select, '', 'store', 'cuaHang', 'koreanString', false, storeSelectOptions, selectLabel, 'Cua hang', selectContainer))
          modalContent.querySelector('.modal-body').appendChild(createSelect(select, roleAbility.create[0], 'role', 'phanQuyen', 'koreanString', false, roleSelectOptions, selectLabel, 'Phan quyen', selectContainer))
          modalContent.querySelector('.modal-body').querySelector('#role').querySelectorAll('option').forEach(option => {
            if (!roleAbility.create.includes(option.getAttribute('value'))) {
              option.style.display = 'none'
            }
          })
        })


        $("#modalContactForm").modal('show')
      } else {
        window.alert('You neet to be admin account to do that!')
      }

    })

    // search
    document.querySelector('#form-search').addEventListener('submit', (event) => {
      console.log('event: ', event.target)
      event.preventDefault()
      var searchValueArray = event.target.querySelector('input').value.split(' ')
      console.log('search array: ', searchValueArray)
      makeRequest('POST', 'employees/search', 'application/json', JSON.stringify({
        data: searchValueArray
      }), (result) => {

        while (document.querySelector('#employee-table-container').querySelector('tbody').firstChild) {
          document.querySelector('#employee-table-container').querySelector('tbody').removeChild(document.querySelector('#employee-table-container').querySelector('tbody').lastChild)
        }
        if (result.employeeList.length !== 0) {
          generateEmployeeManagementList(result.employeeList, storeList, 'employee-table-container', 'employees', user, roleAbility)

        } else {
          generateEmployeeManagementList(employeeList, storeList, 'employee-table-container', 'employees', user, roleAbility)

        }
      })

    })

    // input file
    document.querySelector('#file').addEventListener('change', (event) => {
      console.log('event: ', event)
      const file = event.target.files[0]
      var fileReader = new FileReader()
      fileReader.onload = async (e) => {
        // 1. Read data from csv
        var csv = e.target.result
        // console.log('result: ', e.target.result)

        // 2. Transform raw data to array of object: {name:'', value: ''}
        var simpleObjects = await transformRawToSimpleObjects(csv)
        console.log('simple objects: ', simpleObjects)
        // 3. Transform array of object to database object: {cType, name, dataVie, dataKor, value}
        var dbObjects = await transformSimpleObjectsToDbObjects(simpleObjects)
        console.log('db object: ', dbObjects)

        // 4. Display input object
        if(dbObjects.length !==0){
          generateEmployeeManagementList(dbObjects, storeList, 'employee-table-container', 'employees', user, roleAbility)
          document.querySelector('#upload-employees').style.display = 'inline-block'
          document.querySelector('#upload-employees').addEventListener('click', (event)=>{
            console.log('event: ', event.target)

            makeRequest('POST', 'multEmployee', 'application/json', JSON.stringify({dbObjects}), ()=>{

            })
          })
        }
      }
      fileReader.readAsText(file, 'ISO-8859-1')
    })

    // function to transform raw data to array of simple objects: 
    const transformRawToSimpleObjects = (rawData) => {
      const lines = rawData.split('\n')
      var employeeArrays = []
      const labels = lines[0].split(",")
      for (var i = 1; i < lines.length - 1; i++) {
        var employeeArray = []
        const line = lines[i].split(",")
        for (var j = 0; j < line.length; j++) {
          employeeArray.push({
            name: labels[j],
            value: line[j]
          })
        }
        employeeArrays.push(employeeArray)
      }
      return employeeArrays
    }

    // function to transform simple objects to database object: 
    const transformSimpleObjectsToDbObjects = (objectArrays)=>{
      var dbObjectArray = []
      objectArrays.forEach(objectArray=>{
        var sampleObj = employeeMetadataSample()
        var object = {
          infos: [],
          metadata: []
        }
        objectArray.forEach(object=>{
          if(object.name === "avatar"){
            sampleObj[object.name].value = '/images/userPicture.png'
          } else {
            sampleObj[object.name].value = object.value

          }

        })
        console.log('test: ', sampleObj)

        object.metadata = Object.values(sampleObj)
        dbObjectArray.push(object)
      })
      return dbObjectArray
    }
  
  </script>

</body>

</html>