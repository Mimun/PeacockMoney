<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <style>
    /* resizable table */
  td,
  th {
    overflow: hidden;
    white-space: nowrap;
    -moz-text-overflow: ellipsis;
    -ms-text-overflow: ellipsis;
    -o-text-overflow: ellipsis;
    text-overflow: ellipsis;
  }

  .rc-handle-container {
    position: relative;
  }

  .rc-handle {
    position: absolute;
    width: 7px;
    cursor: ew-resize;
    margin-left: -3px;
    z-index: 2;
  }

  table.rc-table-resizing {
    cursor: ew-resize;
  }

  table.rc-table-resizing thead,
  table.rc-table-resizing thead>th,
  table.rc-table-resizing thead>th>a {
    cursor: ew-resize;
  }

    .search-container .form-group {
      width: fit-content;
    }

    .form-group {
      width: 100%;
    }

    .select-container {
      width: 100%;
      margin-bottom: 1rem;
    }

    .modal-content .modal-footer .btn {
      margin: 0 8px !important;
    }

    .list-group {
      width: fit-content;
      margin: auto;
    }
  </style>
</head>

<body>
  <!-- create store template for modal -->
  <template id="create-store-template">
    <div class="modal-header text-center">
      <h4 class="modal-title w-100 font-weight-bold">Tao moi cua hang</h4>
      <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
      </button>
    </div>
    <div class="modal-body mx-3 object-div d-flex justify-content-between flex-wrap">
      <div class="form-group">
        <label data-error="wrong" data-success="right" class="bmd-label-floating">Ten cua hang</label>
        <input type="text" class="form-control validate" name="name" data-vie="tenCuaHang" data-kor="koreanString">
      </div>

      <div class="form-group">
        <label data-error="wrong" data-success="right" class="bmd-label-floating">Ma cua hang</label>
        <input type="text" class="form-control validate" name="id" data-vie="maCuaHang" data-kor="koreanString">
      </div>

      <div class="form-group">
        <label data-error="wrong" data-success="right" class="bmd-label-floating">So tai khoan</label>
        <input type="text" class="form-control validate" name="creditNumber" data-vie="soTaiKhoan"
          data-kor="koreanString">
      </div>

      <div class="form-group">
        <label data-error="wrong" data-success="right" class="bmd-label-floating">Dia chi</label>
        <input type="text" class="form-control validate" name="address" data-vie="diaChi" data-kor="koreanString">
      </div>

      <div class="form-group">
        <label data-error="wrong" data-success="right" class="bmd-label-floating">So dien thoai</label>
        <input type="number" class="form-control validate" name="phoneNumber" data-vie="soDienThoai"
          data-kor="koreanString">
      </div>

      <div class="form-group">
        <label data-error="wrong" data-success="right" class="bmd-label-floating">Ngay khai truong</label>
        <input type="date" class="form-control validate" name="openingDay" data-vie="ngayKhaiTruong"
          data-kor="koreanString">
      </div>

      <div class="form-group">
        <label data-error="wrong" data-success="right" class="bmd-label-floating">Email</label>
        <input type="email" class="form-control validate" name="email" data-vie="email" data-kor="koreanString">
      </div>


      <div class="form-group">
        <label data-error="wrong" data-success="right" class="bmd-label-floating">Ghi chu</label>
        <input type="text" class="form-control validate" name="note" data-vie="ghiChu" data-kor="koreanString">
      </div>

    </div>
    <div class="modal-footer d-flex justify-content-center">
      <button class="btn btn-raised btn-primary btn-sm" id="btn-add-representative">Add representative</button>
      <button class="btn btn-outline-primary btn-sm" id="btn-create-store">Create</button>
    </div>

  </template>

  <template id="store-representative-select-template">
    <div class="representative-select-container select-container">
      <label>Nguoi dai dien</label>
      <select class="browser-default custom-select">
        <option value="">No employee</option>
      </select>
    </div>

  </template>

  <%- include('../Components/navbar.ejs') %>
  <div class="d-flex" id="wrapper">
    <%- include('../Components/sideBar.ejs') %>
    <div id="page-content-wrapper">
      <h2>List of stores</h2>
      <!-- Search form -->
      <div class="search-container">
        <form id="form-search">
          <div class="form-group">
            <input type="text" class="form-control" id="search" placeholder="Search...">
          </div>
        </form>
      </div>

      <div id="store-list-container" class="list-container">
        <table class="table table-hover table-bordered table-responsive table-striped">
          <thead>
            <tr>
              <th data-resizable-column-id="name">Ten cua hang</th>
              <th data-resizable-column-id="id">Ma cua hang</th>
              <th data-resizable-column-id="creditNumber">Ma giao dich</th>
              <th data-resizable-column-id="address">Dia chi</th>
              <th data-resizable-column-id="email">Email</th>
            </tr>
          </thead>
          <tbody></tbody>
        </table>
      </div>
      <button class="btn btn-raised btn-primary btn-sm" id="create-new-store">Create new store</button>

      <!-- modal to create new store -->
      <div class="modal fade" id="modalContactForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
          <div class="modal-content">


          </div>
        </div>
      </div>
    </div>
  </div>
  </div>
  <script type="module">
    import { generateStoreManagementList } from '/generateStoreManagementList.js'
    import { makeRequest } from '/makeRequest.js'
    const storeList = <%- JSON.stringify(storeList) %>;
    const employeeList = <%- JSON.stringify(employeeList) %>;
    console.log('store list: ', storeList)
    console.log('employee list: ', employeeList)

    const modalContent = document.querySelector('#modalContactForm').querySelector('.modal-content')
    

    // create representative select box
    var storeRepresentativeSelect = document.querySelector('#store-representative-select-template').content.cloneNode(true)
    employeeList.forEach(employee => {
      var option = document.createElement('option')
      option.value = employee._id
      option.innerHTML = employee.fullName + ' - ' + employee.role
      storeRepresentativeSelect.querySelector('select').appendChild(option)
    })

    generateStoreManagementList(storeList, employeeList, 'store-list-container', 'stores')

    // create new store button
    document.querySelector('#create-new-store').addEventListener('click', (event) => {
      $("#modalContactForm").on('show.bs.modal', () => {
        modalContent.innerHTML = ''

        const createstore = document.querySelector('#create-store-template').content.cloneNode(true)


        // must have one select representative box as default
        const storeRepresentativeSelectClone = storeRepresentativeSelect.cloneNode(true)

        // for adding representatives button
        createstore.querySelector('#btn-add-representative').addEventListener('click', (event) => {
          let storeRepresentativeSelectClone = storeRepresentativeSelect.cloneNode(true)
          event.target.closest('.modal-content').querySelector('.modal-body').appendChild(storeRepresentativeSelectClone)
        })

        createstore.querySelector("#btn-create-store").addEventListener('click', (event) => {
          var storeObj = {
            metadata: [],
            infos: [],
            representatives: []
          }
          event.target.closest('.modal-content').querySelector('.modal-body').querySelectorAll('input').forEach(input => {
            storeObj.metadata.push({
              cType: input.type,
              dataKor: input.getAttribute('data-kor'),
              name: input.getAttribute('name'),
              value: input.value,
              dataVie: input.getAttribute('data-vie')
            })

          })

          event.target.closest('.modal-content').querySelector('.modal-body').querySelectorAll('select').forEach(select => {
            if (select.value) {
              storeObj.representatives.push(select.value)

            }
          })
          console.log('input: ', storeObj)
          makeRequest('POST', 'stores', 'application/json', JSON.stringify(storeObj), () => {
            window.location.reload()
          })

        })
        createstore.querySelector('.modal-body').appendChild(storeRepresentativeSelectClone)
        modalContent.appendChild(createstore)
      })

      $("#modalContactForm").modal('show')
    })

    document.querySelector('#form-search').addEventListener('submit', (event) => {
      console.log('event: ', event.target)
      event.preventDefault()
      var searchValueArray = event.target.querySelector('input').value.split(' ')
      console.log('search array: ', searchValueArray)
      makeRequest('POST', 'stores/search', 'application/json', JSON.stringify({ data: searchValueArray }), (result) => {
        document.querySelector('#store-list-container').querySelector('tbody').innerHTML = ''
        if (result.storeList.length !== 0) {
          generateStoreManagementList(result.storeList, employeeList, 'store-list-container', 'stores')

        } else {
          generateStoreManagementList(storeList, employeeList, 'store-list-container', 'stores')

        }
      })

    })

   

  </script>

</body>

</html>