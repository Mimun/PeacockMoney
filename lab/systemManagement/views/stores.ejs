<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <style>
    .info-container {
      border: 1px solid lightgrey;
      padding: 1% 0%;
    }

    .info-container p {
      margin: 0;
    }

    .info-container:hover {
      cursor: pointer;
      background-color: lightgrey;
    }

    .name {
      font-weight: bold;
      font-size: larger;
    }

    .phone-number .email .id {
      font-size: smaller;
    }
  </style>
</head>

<body>
  <!-- create store template for modal -->
  <template id="create-store-template">
    <div class="modal-header text-center">
      <h4 class="modal-title w-100 font-weight-bold">Tao moi cua hang</h4>
      <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
      </button>
    </div>
    <div class="modal-body mx-3">
      <div class="md-form mb-5">
        <input type="text" class="form-control validate" name="storeName" data-vie="tenCuaHang" data-kor="koreanString">
        <label data-error="wrong" data-success="right">Ten cua hang</label>
      </div>

      <div class="md-form mb-5">
        <input type="text" class="form-control validate" name="address" data-vie="diaChi" data-kor="koreanString">
        <label data-error="wrong" data-success="right">Dia chi</label>
      </div>

      <div class="md-form mb-5">
        <input type="number" class="form-control validate" name="phoneNumber" data-vie="soDienThoai"
          data-kor="koreanString">
        <label data-error="wrong" data-success="right">So dien thoai</label>
      </div>

      <div class="md-form mb-5">
        <input type="email" class="form-control validate" name="email" data-vie="email" data-kor="koreanString">
        <label data-error="wrong" data-success="right">Email</label>
      </div>


      <div class="md-form mb-5">
        <input type="text" class="form-control validate" name="note" data-vie="ghiChu" data-kor="koreanString">
        <label data-error="wrong" data-success="right">Ghi chu</label>
      </div>

    </div>
    <div class="modal-footer d-flex justify-content-center">
      <button class="btn btn-default" id="btn-add-representative">Add representative</button>
      <button class="btn btn-unique" id="btn-create-store">Create</button>
    </div>

  </template>

  <template id="store-representative-select-template">
    <div class="representative-select-container">
      <label>Nguoi dai dien</label>
      <select class="browser-default custom-select">
        <option value="">No employee</option>
      </select>
    </div>
    
  </template>

  <!-- store list -->
  <template id="store-list">
    <div class="info-container">
      <div class="container">
        <div class="row">
          <div class="col">
            <p class="name"></p>
          </div>
          <div class="col">
            <p class="phone-number"></p>
          </div>
          <div class="col">
            <p class="email"></p>
          </div>
          <div class="col">
            <p class="id"></p>
          </div>
        </div>
      </div>

    </div>
  </template>

 <%- include('../Components/navbar.ejs') %> 
  <div class="d-flex" id="wrapper">
    <%- include('../Components/sideBar.ejs') %> 
    <div id="page-content-wrapper">
      <h2>This is list of store</h2>
      <div id="store-list-container"></div>
      <button class="btn btn-default btn-sm" id="create-new-store">Create new store</button>

      <!-- modal to create new store -->
      <div class="modal fade" id="modalContactForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
          <div class="modal-content">


          </div>
        </div>
      </div>
    </div>
  </div>
  </div>

  <script type="module">
    import { generateStoreManagementList } from '/generateStoreManagementList.js'
    const storeList = <%- JSON.stringify(storeList) %>;
    const employeeList = <%- JSON.stringify(employeeList) %>;
    console.log('store list: ', storeList)
    console.log('employee list: ', employeeList)

    const modalContent = document.querySelector('#modalContactForm').querySelector('.modal-content')
    const storeListTemplate = document.querySelector('#store-list')

    // create representative select box
    var storeRepresentativeSelect = document.querySelector('#store-representative-select-template').content.cloneNode(true)
    employeeList.forEach(employee => {
      var option = document.createElement('option')
      option.value = employee._id
      option.innerHTML = employee.fullName + ' - ' + employee.role
      storeRepresentativeSelect.querySelector('select').appendChild(option)
    })

    generateStoreManagementList(storeList, employeeList, storeListTemplate, 'store-list-container', 'stores')

    // create new store button
    document.querySelector('#create-new-store').addEventListener('click', (event) => {
      $("#modalContactForm").on('show.bs.modal', () => {
        modalContent.innerHTML = ''

        const createstore = document.querySelector('#create-store-template').content.cloneNode(true)

        // must have one select representative box as default
        const storeRepresentativeSelectClone = storeRepresentativeSelect.cloneNode(true)

        // for adding representatives button
        createstore.querySelector('#btn-add-representative').addEventListener('click', (event) => {
          let storeRepresentativeSelectClone = storeRepresentativeSelect.cloneNode(true)
          event.target.closest('.modal-content').querySelector('.modal-body').appendChild(storeRepresentativeSelectClone)
        })

        createstore.querySelector("#btn-create-store").addEventListener('click', (event) => {
          var storeObj = {
            metadata: [],
            infos: [],
            representatives: []
          }
          event.target.closest('.modal-content').querySelector('.modal-body').querySelectorAll('input').forEach(input => {
            storeObj.metadata.push({
              cType: input.type,
              dataKor: input.getAttribute('data-kor'),
              name: input.getAttribute('name'),
              value: input.value,
              dataVie: input.getAttribute('data-vie')
            })

          })

          event.target.closest('.modal-content').querySelector('.modal-body').querySelectorAll('select').forEach(select => {
            if (select.value) {
              storeObj.representatives.push(select.value)

            }
          })
          console.log('input: ', storeObj)
          $.ajax({
            type: 'POST',
            url: 'stores',
            contentType: 'application/json',
            data: JSON.stringify(storeObj),
            success: result => {
              console.log('result: ', result)
              $("#modalContactForm").modal('hide')
              window.location.reload()
            }
          })

        })
        createstore.querySelector('.modal-body').appendChild(storeRepresentativeSelectClone)
        modalContent.appendChild(createstore)
      })

      $("#modalContactForm").modal('show')
    })
  </script>

</body>

</html>