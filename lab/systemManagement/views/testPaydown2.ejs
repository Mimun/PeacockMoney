<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <link rel="stylesheet"
    href="https://unpkg.com/bootstrap-material-design@4.1.1/dist/css/bootstrap-material-design.min.css">
  <style>
    .block-container {
      border: 1px solid lightgrey;
      margin: 16px 0;
      padding: 32px 48px;
    }

    table th {
      text-align: right;
    }

    body {
      padding: 8%;
    }
  </style>
</head>

<body>
  <div class="d-flex" id="wrapper">
    <div id="page-content-wrapper">
      <h1>Bảng tính lãi theo dư nợ cố định</h1>
      <div class="container" style="margin: 0 !important;
      padding: 0 !important;
      max-width: 100%;">
        <!-- penalty rule -->
        <div class="row block-container">
          <!-- penalty rule -->
          <div class="col-3">
            <div class="penalty-rules">
              <h4>Penalty rule</h4>
              <div class="form-group" id="policy">
                <label>Thoi gian qua han</label>
                <input type="number" class="form-control" id="from" placeholder="From...">
                <input type="number" class="form-control" id="to" placeholder="To...">
              </div>
              <div class="form-group">
                <label class="bmd-label-floating">Kieu phat</label>
                <select class="form-control" id="policyType">
                  <option value="static">Static</option>
                  <option value="dynamic1">Dynamic 1: % * No goc * so ngay dong cham</option>
                  <option value="dynamic2">Dynamic 2: % * so tien dong cham</option>
                </select>
              </div>
              <div class="form-group">
                <label class="bmd-label-floating">Phi phat</label>
                <input type="text" class="form-control" id="penaltyRate">
              </div>
              <div class="form-group is-filled" id="original-debt">
                <label>No goc</label>
                <input type="number" class="form-control" id="debtFrom" placeholder="From...">
                <input type="number" class="form-control" id="debtTo" placeholder="To...">
              </div>
              <button class="btn btn-sm btn-primary" id="btn-add-rule">Add rule</button>
            </div>
          </div>

          <div class="col">
            <div class="penalty-table">
              <h3>Bang quy dinh cach phat</h3>
              <table class="table table-hover  penalty-table">
                <thead>
                  <tr>
                    <th id="from">Tu</th>
                    <th id="to">Den</th>
                    <th id="penaltyRate">Phat</th>
                    <th id="debtFrom">No goc tu</th>
                    <th id="debtTo">No goc den</th>
                    <th id="policyType">Kieu phat</th>
                  </tr>
                </thead>
                <tbody></tbody>
              </table>
            </div>
          </div>

          <!-- loan package -->
          <div class="col-3">
            <div class="loan-package">
              <h4>Tao goi vay</h4>

              <div class="form-group">
                <label>So tien vay</label>
                <input type="number" class="form-control" id="presentValue">
              </div>
              <div class="form-group">
                <label>Ngay bat dau goi vay</label>
                <input type="date" class="form-control" id="agreementDate">
              </div>
              <div class="form-group">
                <label>Lai suat ngay(%)</label>
                <input type="number" class="form-control" id="interestRatePerDay">
              </div>
              <div class="form-group">
                <label>So lan tra(theo thang)</label>
                <input type="number" class="form-control" id="numberOfPayments">
              </div>
              <button class="btn btn-sm btn-primary" id="createLoanPackage">Kich hoat goi vay</button>

            </div>
          </div>

        </div>

        <!-- package -->
        <div class="row block-container">

          <!-- simulation -->
          <div class="col">
            <div class="simulation period-table-container">
              <h4>Simulation</h4>
              <!-- button to open modal -->
              <button class="btn btn-primary" id="btn-choose-column">Choose column</button>
              <button class="btn btn-primary" id="btn-pay-all">Pay all</button>
              <table class="table table-hover  period-table">
                <thead>
                  <tr>
                    <th scope="col" id="numericalOrder">STT</th>
                    <th scope="col" id="id">Ma ky</th>
                    <th scope="col" id="redemptionDate">Ngay dong</th>
                    <th scope="col" id="redemption">So tien dong(principal+interest)</th>

                    <th scope="col" id="principal">Principal</th>
                    <th scope="col" id="paidPrincipal">Paid principal</th>
                    <th scope="col" id="remainPrincipal">Remain principal</th>
                    <th scope="col" id="incrementalPaidPrincipal">Goc da tra cong don</th>

                    <th scope="col" id="interest">Lai</th>
                    <th scope="col" id="paidInterest">Lai da thu</th>
                    <th scope="col" id="remainInterest">Lai con lai</th>
                    <th scope="col" id="accumulatedPaidInterest">Lai da tra luy ke</th>

                    <th scope="col" id="totalPenalty">Tong phat</th>
                    <th scope="col" id="paidTotalPenalty">Tong phat da tra</th>
                    <th scope="col" id="remainTotalPenalty">Tong phat con lai</th>

                    <th scope="col" id="presentValue">Goc con lai</th>
                    <th scope="col" id="payDown">Tra bot</th>
                    <th scope="col" id="loanMore">Vay them</th>
                    <th scope="col" id="totalPayment">Tong tien dong(phat+ so tien dong)</th>
                    <th scope="col" id="paid">Da tra</th>
                    <th scope="col" id="remain">Con lai</th>
                    <th scope="col" id="periodStatus">Tinh trang</th>
                    <th scope="col" id="daysBetween">Days pass</th>
                    <!-- <th scope="col" id="penalty">Penalty</th>
                    <th scope="col" id="blockPenalty">Block penalty</th> -->
                  </tr>
                </thead>
                <tbody>
                </tbody>
              </table>
            </div>
          </div>

        </div>

        <!-- date for simulation -->
        <div class="row block-container">
          <div class="col-2">
            <div class="date">
              <h4>Choose date to start simulation</h4>
              <label for="real-date">Thoi gian thuc</label>
              <input type="date" id="real-date" class="form-control">
              <button class="btn btn-sm btn-primary" id="btn-simulation">Start simulation</button>
              <button class="btn btn-sm btn-info" id="btn-pause">Pause</button>
            </div>
          </div>

          <div class="col-2">
            <div class="time-counter">
              <h4>Time counter</h4>
              <p id="real-date-counter">Date counter: <span></span></p>
            </div>

          </div>

          <!-- payment section -->
          <div class="col2">
            <div class="payment">
              <h4>Payment</h4>
              <div class="form-group">
                <label>So tien</label>
                <input type="number" class="form-control" id="paymentSlip">
              </div>
              <div class="radio">
                <label>
                  <input type="radio" name="optionsRadios" id="optionsRadios1" value="1" checked>
                  Tien mat
                </label>
              </div>
              <div class="radio">
                <label>
                  <input type="radio" name="optionsRadios" id="optionsRadios2" value="2">
                  Chuyen khoan
                </label>
              </div>
              <button class="btn btn-sm btn-primary" id="btn-payment-slip">Add</button>
            </div>
          </div>

          <!-- payment history -->
          <div class="col">
            <div class="payment-history">
              <h4>Payment history</h4>
              <table class="table table-hover  payment-history-table">
                <thead>
                  <tr>
                  <tr>
                    <th scope="col" id="period">No</th>
                    <th scope="col" id="id">Ma phieu</th>
                    <th scope="col" id="pay">Pay</th>
                    <th scope="col" id="interest">Lãi phải thu</th>
                    <th scope="col" id="paidInterest">Lãi đã thu</th>
                    <th scope="col" id="remainInterest">Lãi còn lại</th>

                    <th scope="col" id="principal">Gốc phải thu</th>
                    <th scope="col" id="paidPrincipal">Gốc đã thu</th>
                    <th scope="col" id="remainPrincipal">Gốc còn lại</th>

                    <th scope="col" id="totalPenalty">Tổng phạt phải thu</th>
                    <th scope="col" id="paidTotalPenalty">Tổng phạt đã thu</th>
                    <th scope="col" id="remainTotalPenalty">Tổng phạt còn lại</th>

                    <th scope="col" id="totalPayment">Total payment</th>
                    <th scope="col" id="paid">Total paid</th>
                    <th scope="col" id="remain">Remain</th>
                    <th scope="col" id="date">Date</th>
                  </tr>
                  </tr>
                </thead>
                <tbody>
                </tbody>
              </table>
            </div>
          </div>
        </div>

        <!-- set block -->
        <div class="row block-container">
          <!-- block rule -->
          <div class="col">
            <div class="block-rules">
              <h4>Block rule</h4>
              <div class="form-group">
                <label>Thoi han block</label>
                <input type="number" class="form-control" id="block" placeholder="Block...">
              </div>
              <div class="form-group">
                <label class="bmd-label-floating">Phat truoc block</label>
                <input type="text" class="form-control" id="preBlockPenalty">
              </div>
              <div class="form-group">
                <label class="bmd-label-floating">Phat sau block</label>
                <input type="text" class="form-control" id="postBlockPenalty">
              </div>
              <button class="btn btn-sm btn-primary" id="btn-add-block-rule">Set block</button>
            </div>
          </div>

          <div class="col">
            <div class="block-table">
              <h3>Bang quy dinh block</h3>
              <table class="table table-hover  block-table">
                <thead>
                  <tr>
                    <th id="block">Block</th>
                    <th id="preBlockPenalty">Phat truoc block</th>
                    <th id="postBlockPenalty">Phat sau block</th>
                  </tr>
                </thead>
                <tbody></tbody>
              </table>
            </div>
          </div>

          <!-- loan more, pay down -->
          <div class="col">
            <h4>Tra bot</h4>
            <div class="form-group">
              <label>So tien</label>
              <input type="number" class="form-control" id="payDown">
            </div>

            <button class="btn btn-sm btn-primary" id="btn-pay-down">Add</button>
          </div>

          <div class="col">
            <h4>Vay them</h4>
            <div class="form-group">
              <label>So tien</label>
              <input type="number" class="form-control" id="loanMore">
            </div>
            <button class="btn btn-sm btn-primary" id="btn-loan-more">Vay them</button>
          </div>

          <div class="loan-more-pay-down-table-container">
            <table class="table table-stripped table-hover  loanMorePayDownTable">
              <thead>
                <tr>
                  <th id="id">Date</th>
                  <th id="date">Date</th>
                  <th id="value">Value</th>
                </tr>
              </thead>
              <tbody></tbody>
            </table>
          </div>

        </div>

      </div>

      <!-- modal -->
      <div class="modal" tabindex="-1" role="dialog" id="choose-column-modal">
        <div class="modal-dialog modal-lg" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">Choose columns to display</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body">
              <div class="row row-cols-3">
                <div class="col mb-4 ml-4 mr-4">
                  <div class="checkbox">
                    <label>
                      <input type="checkbox" value="all" data-vie="All" id="all"> all
                    </label>
                  </div>
                  <div class="checkbox">
                    <label>
                      <input type="checkbox" value="numericalOrder" data-vie="STT"> STT
                    </label>
                  </div>
                  <div class="checkbox">
                    <label>
                      <input type="checkbox" value="id" data-vie="Ma ky"> STT
                    </label>
                  </div>
                  <div class="checkbox">
                    <label>
                      <input type="checkbox" value="redemptionDate" data-vie="Ngay dong"> Ngay dong
                    </label>
                  </div>
                  <div class="checkbox">
                    <label>
                      <input type="checkbox" value="redemption" data-vie="So tien dong"> So tien dong
                    </label>
                  </div>
                  <div class="checkbox">
                    <label>
                      <input type="checkbox" value="principal" data-vie="Principal"> Principal
                    </label>
                  </div>
                  <div class="checkbox">
                    <label>
                      <input type="checkbox" value="incrementalPaidPrincipal" data-vie="Goc da tra cong don"> Goc da tra
                      cong don
                    </label>
                  </div>
                  <div class="checkbox">
                    <label>
                      <input type="checkbox" value="interest" data-vie="lai"> Lai
                    </label>
                  </div>
                </div>
                <div class="col mb-4 ml-4 mr-4">
                  <div class="checkbox">
                    <label>
                      <input type="checkbox" value="accumulatedPaidInterest" data-vie="Lai da tra luy ke"> Lai da tra
                      luy ke
                    </label>
                  </div>
                  <div class="checkbox">
                    <label>
                      <input type="checkbox" value="presentValue" data-vie="Goc con lai"> Goc con lai
                    </label>
                  </div>
                  <div class="checkbox">
                    <label>
                      <input type="checkbox" value="payDown" data-vie="Tra bot"> Tra bot
                    </label>
                  </div>
                  <div class="checkbox">
                    <label>
                      <input type="checkbox" value="loanMore" data-vie="Vay them"> Vay them
                    </label>
                  </div>
                  <div class="checkbox">
                    <label>
                      <input type="checkbox" value="totalPayment" data-vie="Tong tien dong(Phat+So tien dong)"> Tong
                      tien dong(phat+so tien dong)
                    </label>
                  </div>
                  <div class="checkbox">
                    <label>
                      <input type="checkbox" value="paid" data-vie="Da tra"> Da tra
                    </label>
                  </div>
                </div>
                <div class="col mn-4 ml-4 mr-4">
                  <div class="checkbox">
                    <label>
                      <input type="checkbox" value="remain" data-vie="Con lai"> Con lai
                    </label>
                  </div>
                  <div class="checkbox">
                    <label>
                      <input type="checkbox" value="periodStatus" data-vie="Tinh trang"> Tinh trang
                    </label>
                  </div>
                  <div class="checkbox">
                    <label>
                      <input type="checkbox" value="daysBetween" data-vie="Day pass"> Day pass
                    </label>
                  </div>
                  <div class="checkbox">
                    <label>
                      <input type="checkbox" value="penalty" data-vie="Penalty"> Penalty
                    </label>
                  </div>
                  <div class="checkbox">
                    <label>
                      <input type="checkbox" value="blockPenalty" data-vie="Block penalty"> Block penalty
                    </label>
                  </div>
                </div>
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-primary" id="save">Save changes</button>
              <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
          </div>
        </div>
      </div>

    </div>
  </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
  <script src="https://unpkg.com/popper.js@1.12.6/dist/umd/popper.js"></script>
  <script src="https://unpkg.com/bootstrap-material-design@4.1.1/dist/js/bootstrap-material-design.js"></script>
  <script>$(document).ready(function () { $('body').bootstrapMaterialDesign(); });</script>



  <!-- global variable -->
  <script>
    var ruleArray = []
    var blockRuleArray = []
    var loanPackage = {}
    var record = null
    var period = -1
    var isPause = false
    var originalValue = 100000000
    var realLifeDate = null
    var block = {}
    var totalRemainForLoaningMore = 0
    var simulation = JSON.parse('<%- simulation %>')
  </script>

  <!-- common function -->
  <script>
    Date.isLeapYear = function (year) {
      return (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0));
    };

    Date.getDaysInMonth = function (year, month) {
      return [31, (Date.isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];
    };

    Date.prototype.isLeapYear = function () {
      return Date.isLeapYear(this.getFullYear());
    };

    Date.prototype.getDaysInMonth = function () {
      return Date.getDaysInMonth(this.getFullYear(), this.getMonth());
    };

    Date.prototype.addMonths = function (value) {
      var n = this.getDate();
      this.setDate(1);
      this.setMonth(this.getMonth() + value);
      this.setDate(Math.min(n, this.getDaysInMonth()));
      return this;
    };

    const getDateAfterAnAmountOfDates = (date, amount) => {
      return formatDate(new Date(date.setDate(date.getDate() + amount)))
    }

    const getDateAfterAnAmountOfMonths = (originalDate, amount) => {
      var date = new Date(originalDate)
      var redemptionDate = new Date(date.setMonth(date.getMonth() + amount))
      const oneDay = 24 * 60 * 60 * 1000
      var daysInMonth = Math.abs((redemptionDate - originalDate) / oneDay)
      return {
        redemptionDate, daysInMonth
      }
    }

    const getDaysBetween = (d1, d2) => {
      let date1 = new Date(d1)
      let date2 = new Date(d2)
      var oneDay = 1000 * 60 * 60 * 24
      var msDifference = date1.getTime() - date2.getTime()
      var daysDifference = Math.abs(msDifference / oneDay)
      return daysDifference
    }

    const getDaysInMonth = (month, year) => {
      return new Date(year, month + 1, 0).getDate()
    }

    function pmt(rate_per_period, number_of_payments, present_value, future_value, type) {
      future_value = typeof future_value !== 'undefined' ? future_value : 0;
      type = typeof type !== 'undefined' ? type : 0;

      if (rate_per_period != 0.0) {
        // Interest rate exists
        var q = Math.pow(1 + rate_per_period, number_of_payments);
        return -(rate_per_period * (future_value + (q * present_value))) / ((-1 + q) * (1 + rate_per_period * (type)));

      } else if (number_of_payments != 0.0) {
        // No interest rate, but number of payments exists
        return -(future_value + present_value) / number_of_payments;
      }

      return 0;
    }

    const formatDate = (date, type) => {
      var d = new Date(date),
        month = '' + (d.getMonth() + 1),
        day = '' + d.getDate(),
        year = d.getFullYear();

      if (month.length < 2)
        month = '0' + month;
      if (day.length < 2)
        day = '0' + day;

      switch (type) {
        // id
        case (1):
          return [day, month, year].join('');
          break
        // normal formate date
        case (2):
          return [day, month, year].join('-');
          break
        default:
          return [day, month, year].join('-');

      }

    }

    const displayTable = (object, elementName) => {
      var tr = document.createElement('tr')
      document.querySelectorAll(`div.${elementName} table thead th`).forEach((element, index) => {
        var th = document.createElement('th')
        if (object[element.id] !== undefined) {
          switch (element.id) {
            case ('redemptionDate'):
              th.innerHTML = formatDate(object[element.id])
              break
            default:
              th.innerHTML = object[element.id].toLocaleString()

          }
        }

        th.id = element.id
        tr.id = object.period
        tr.appendChild(th)
      })
      object.isPaydownPeriod ? tr.style.backgroundColor = 'lightblue' : null
      object.isLoanMorePeriod ? tr.style.backgroundColor = 'lightgreen' : null
      document.querySelector(`div.${elementName} table tbody`).appendChild(tr)
    }

  </script>

  <!-- create and display loan package -->
  <script type="module">
    import PeriodRecord from './periodRecord.js'
    import Record from './record.js'

    document.querySelector('button#createLoanPackage').addEventListener('click', (event) => {

      document.querySelectorAll('.loan-package input').forEach(input => {
        if (input.type === 'number') {
          loanPackage[input.id] = parseFloat(input.value)
        } else {
          loanPackage[input.id] = input.value
        }
      });
      originalValue = loanPackage.presentValue
      console.log('package: ', loanPackage)
      record = new Record(loanPackage.interestRatePerDay ? loanPackage.interestRatePerDay : loanPackage.interestRatePerMonth
        , loanPackage.presentValue, new Date(loanPackage.agreementDate),
        loanPackage.numberOfPayments, ruleArray, new Date(Date.now()), simulation)
      record.createPeriodRecords()
      record.loanMorePayDownRecords.push({
        id: `MaHopDong1.${formatDate(record.agreementDate, 1)}`,
        date: record.agreementDate,
        value: -record.presentValue,

      })
      console.log('record: ', record)
      document.querySelector(`div.period-table-container table tbody`).innerHTML = ''

      record.periodRecords.forEach((rec, index) => {
        displayTable(rec, 'period-table-container')
        if (index === record.periodRecords.length - 1) {
          document.querySelector('.period-table-container h4').innerHTML = `Ngay ket thuc hop dong: ${formatDate(rec.redemptionDate)}`
        }
      })
      document.querySelector(`div.loan-more-pay-down-table-container table tbody`).innerHTML = ''
      record.loanMorePayDownRecords.forEach(rec => {
        displayTable(rec, 'loan-more-pay-down-table-container')
      })
      // calculateRedemption(obj)

    })

  </script>

  <!-- create and display penalty rules -->
  <script>
    const displayRule = (ruleObj, elementName) => {
      var tr = document.createElement('tr')
      document.querySelectorAll(`table.${elementName} thead th`).forEach(element => {
        var th = document.createElement('th')
        th.innerHTML = ruleObj[element.id]
        tr.appendChild(th)
      })
      document.querySelector(`table.${elementName} tbody`).appendChild(tr)
    }

    document.querySelector('button#btn-add-rule').addEventListener('click', (event) => {
      var lastRule = ruleArray[ruleArray.length - 1]
      if (lastRule && lastRule.to === '') {
        window.alert("You cannot add more rules because last rule's time stamp is to infinity!")
      } else {
        var ruleObj = {}
        document.querySelectorAll('div.penalty-rules input,select').forEach(element => {
          ruleObj[element.id] = element.value
        })
        ruleArray.push(ruleObj)
        console.log('rule obj: ', ruleObj)
        document.querySelector('input#from').value = ruleObj.to
        document.querySelector('input#to').value = ''
        document.querySelector('input#from').setAttribute('disabled', ruleObj.to === '' ? false : true)
        displayRule(ruleObj, 'penalty-table')
      }

    })
  </script>

  <!-- choose date, display time counter -->
  <script>
    document.querySelector('button#btn-simulation').addEventListener('click', (event) => {
      realLifeDate = new Date(document.querySelector('div.date input#real-date').value)
      console.log('real date input value: ', realLifeDate)
      record.count(realLifeDate)
      event.target.setAttribute('disabled', true)
    })

    document.querySelector('button#btn-pause').addEventListener('click', (event) => {
      record.pauseCounting()
      record.isPause ? event.target.innerHTML = 'start' : event.target.innerHTML = 'pause'

    })
  </script>

  <!-- calculate and display payment -->
  <script>
    document.querySelector('button#btn-payment-slip').addEventListener('click', (event) => {
      console.log('radio: ', document.querySelector('input[type="radio"]:checked'))
      var paymentSlipObj = {
        addedDate: record.realLifeDate,
        paymentMethod: document.querySelector('input[type="radio"]:checked').value
      }
      document.querySelector('div.payment').querySelectorAll('input:not([type="radio"])').forEach(input => {
        paymentSlipObj[input.getAttribute('id')] = input.value
      })

      const notDonePeriodArray = record.periodRecords.filter(period => {
        return period.periodStatus === false
      })
      if (notDonePeriodArray.length !== 0) {
        console.log('not done period array: ', notDonePeriodArray)

        record.paidNotDonePeriod(paymentSlipObj, parseFloat(paymentSlipObj.paymentSlip),
          paymentSlipObj.addedDate, notDonePeriodArray)
        document.querySelector(`div.period-table-container table tbody`).innerHTML = ''

        record.periodRecords.forEach(rec => {
          displayTable(rec, 'period-table-container')
        })

        document.querySelector('div.payment-history table tbody').innerHTML = ''
        if (record.periodPaymentSlip.length !== 0) {
          record.periodPaymentSlip.forEach(payment => {
            displayTable(payment, 'payment-history')
          })
        }
      } else {
        // record.Paid(parseFloat(paymentSlipObj.paymentSlip, paymentSlipObj.addedDate))
        window.alert('You have paid all the periods.')
      }
    })
  </script>

  <!-- calculate and display pay down -->
  <script>
    document.querySelector('button#btn-pay-down').addEventListener('click', (event) => {
      if (record.isLoanMoreOrPayDown) {
        window.alert("You've already paid down today. Please comeback tomorrow!")
      } else {
        var payDownObj = {
          date: record.realLifeDate,
          value: parseFloat(document.querySelector('input#payDown').value)
        }
        var remainPeriods = record.periodRecords.filter(rec => {
          return rec.redemptionDate < record.realLifeDate && rec.periodStatus === false
        }).map(rec => {
          return rec.period
        })

        if (remainPeriods.length !== 0) {
          window.alert(`You need to finish all remain periods (${remainPeriods.join(', ')}) to pay down!`)
        } else {
          record.payDown(payDownObj, block)
          document.querySelector(`div.period-table-container table tbody`).innerHTML = ''

          record.periodRecords.forEach(rec => {
            displayTable(rec, 'period-table-container')
          })

          document.querySelector(`div.loan-more-pay-down-table-container table tbody`).innerHTML = ''
          record.loanMorePayDownRecords.forEach(rec => {
            displayTable(rec, 'loan-more-pay-down-table-container')
          })
        }


      }

    })


  </script>

  <!-- set block -->
  <script>
    document.querySelector('button#btn-add-block-rule').addEventListener('click', (event) => {
      document.querySelectorAll('div.block-rules input').forEach(element => {
        block[element.id] = parseFloat(element.value)
      })
      console.log('block: ', block)
      var blockDate = new Date(loanPackage.agreementDate)
      block.blockDate = new Date(blockDate.setDate(blockDate.getDate() + block.block))
      console.log('block date: ', block)
      displayRule(block, 'block-table')
    })
  </script>

  <!-- loan more -->
  <script>
    document.querySelector('button#btn-loan-more').addEventListener('click', (event) => {
      if (record.isLoanMoreOrPayDown) {
        window.alert("You've already loaned more today. Please comeback tomorrow!")
      } else {
        var payDownObj = {
          date: record.realLifeDate,
          value: parseFloat(document.querySelector('input#loanMore').value)
        }
        var remainPeriods = record.periodRecords.filter(rec => {
          return rec.redemptionDate < record.realLifeDate && rec.periodStatus === false
        }).map(rec => {
          return rec.period
        })

        if (remainPeriods.length !== 0) {
          window.alert(`You need to finish all remain periods (${remainPeriods.join(', ')}) to pay down!`)
        } else {
          record.loanMore(payDownObj)
          document.querySelector(`div.period-table-container table tbody`).innerHTML = ''

          record.periodRecords.forEach(rec => {
            displayTable(rec, 'period-table-container')
          })

          document.querySelector(`div.loan-more-pay-down-table-container table tbody`).innerHTML = ''
          record.loanMorePayDownRecords.forEach(rec => {
            displayTable(rec, 'loan-more-pay-down-table-container')
          })
        }

      }

    })


  </script>

  <!-- choose columns to display -->
  <script>
    document.querySelector('#btn-choose-column').addEventListener('click', (event) => {
      $('#choose-column-modal').modal('show')

    })
    document.querySelector('input#all').addEventListener('click', (event) => {
      console.log('select: ', event.target.checked)
      document.querySelectorAll('.modal-body input').forEach(element => {
        element.checked = event.target.checked
      })
    })
    document.querySelector('button#save').addEventListener('click', (event) => {
      console.log('event: ', event)
      document.querySelector('table.period-table thead tr').innerHTML = ''
      // console.log('all checked element: ', document.querySelectorAll('.modal .modal-body input[type="checkbox"]:checked'))
      document.querySelectorAll('.modal .modal-body input[type="checkbox"]:checked:not(#all)').forEach(element => {
        console.log('checked element: ', element.value)
        var th = document.createElement('th')
        th.id = element.value
        th.innerHTML = element.getAttribute('data-vie')
        document.querySelector('table.period-table thead tr').appendChild(th)
      })
      $('#choose-column-modal').modal('hide')
      if (record) {
        document.querySelector('table.period-table tbody').innerHTML = ''

        record.periodRecords.forEach((rec, index) => {
          displayTable(rec, 'period-table-container')
        })
      }

    })

  </script>

  <!-- payall button -->
  <script>
    document.querySelector('button#btn-pay-all').addEventListener('click', event => {
      record.payAll()
      document.querySelector('table.payment-history-table tbody').innerHTML = ''
      record.periodRecords.forEach(record => {
        record.paymentRecords.forEach(rec => {
          var tr = document.createElement('tr')
          document.querySelectorAll('table.payment-history-table thead th').forEach(element => {
            var th = document.createElement('th')
            th.innerHTML = rec[element.id].toLocaleString()
            tr.appendChild(th)
          })
          document.querySelector('table.payment-history-table tbody').appendChild(tr)
        })
      })

    })
  </script>

</body>

</html>