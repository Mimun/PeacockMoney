<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <style>
    .md-form {
      margin-bottom: 16px;
    }

    .money-table,
    .case-table {
      width: 70% !important;
      margin: auto;
    }

    .table-container,
    .note-container {
      padding: 16px 64px;
      margin: 16px 0;
      border: 1px solid lightgrey;
      overflow-x: scroll;
      max-width: 100vw;
    }

    .note-container {
      overflow-x: unset !important;
      max-width: 400px;
    }



    .ui-resizable {
      position: static !important;
    }

    .table-container th {
      min-width: 160px;
    }
  </style>
</head>

<body>
  <%- include('../Components/navbar.ejs') %>
  <div class="d-flex" id="wrapper">
    <%- include('../Components/sideBar.ejs') %>
    <div id="page-content-wrapper">
      <h2>Thống kê báo cáo</h2>
      <button class="btn btn-sm btn-primary" id="choose-date">Chọn ngày báo cáo</button>
      <button class="btn btn-sm btn-primary" id="export">Export Excel</button>

      <div class="note-container">
        <div class="container">
          <div class="row">
            <div class="col">
              <div class="box daily"></div><span>Daily</span>
            </div>
            <div class="col">
              <div class="box monthly"></div><span>Monthly</span>

            </div>
            <!-- <div class="col">
              <div class="box total"></div><span>Total</span>

            </div> -->

          </div>
        </div>
      </div>

      <div class="table-container">
        <h5>Giải ngân</h5>
        <h6>Số tiền giải ngân</h6>
        <table class="table table-bordered table-striped C-Giải-ngân-mới table1" id="money-report-table">
          <thead>
            <tr>
              <th class="static" id="itemType">Giải ngân(tiền)</th>
            </tr>
          </thead>
          <tbody></tbody>
        </table>
        <h6>Số vụ giải ngân</h6>
        <table class="table table-bordered table-striped C-Giải-ngân-mới table2" id="case-report-table">
          <thead>
            <tr>
              <th class="static" id="itemType">Giải ngân(vụ)</th>
            </tr>
          </thead>
          <tbody></tbody>
        </table>
        <table class="tableBreak1">
          <thead>
            <tr></tr>
          </thead>
        </table>
      </div>

      <div class="table-container">
        <h5>Gốc</h5>
        <h6>Gốc thu lại</h6>
        <table class="table table-bordered table-striped T-Gốc table3" id="money-report-table">
          <thead>
            <tr>
              <th class="static" id="itemType">Theo dõi trả gốc(tiền)</th>
            </tr>
          </thead>
          <tbody></tbody>
        </table>
        <h6>Số vụ trả gốc</h6>
        <table class="table table-bordered table-striped T-Gốc table4" id="case-report-table">
          <thead>
            <tr>
              <th class="static" id="itemType">Theo dõi trả gốc(vụ)</th>
            </tr>
          </thead>
          <tbody></tbody>
        </table>
        <table class="tableBreak2">
          <thead>
            <tr></tr>
          </thead>
        </table>
      </div>

      <div class="table-container">
        <h5>Lãi</h5>
        <h6>Tiền lãi đã nộp</h6>
        <table class="table table-bordered table-striped T-Lãi table5" id="money-report-table">
          <thead>
            <tr>
              <th class="static" id="itemType">Theo dõi trả lãi(tiền)</th>
            </tr>
          </thead>
          <tbody></tbody>
        </table>
        <h6>Số vụ trả lãi</h6>
        <table class="table table-bordered table-striped T-Lãi table6" id="case-report-table">
          <thead>
            <tr>
              <th class="static" id="itemType">Theo dõi trả lãi(vụ)</th>
            </tr>
          </thead>
          <tbody></tbody>
        </table>
        <table class="tableBreak3">
          <thead>
            <tr></tr>
          </thead>
        </table>
      </div>

      <div class="table-container">
        <h5>Gốc còn nợ</h5>
        <h6>Tiền gốc còn nợ</h6>
        <table class="table table-bordered table-striped presentValue table7" id="money-report-table">
          <thead>
            <tr>
              <th class="static" id="itemType">Theo dõi gốc còn nợ(tiền)</th>
            </tr>
          </thead>
          <tbody></tbody>
        </table>
        <table class="tableBreak4">
          <thead>
            <tr></tr>
          </thead>
        </table>
      </div>

      <!-- Modal -->
      <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="exampleModalLabel">Chọn ngày và cửa hàng báo cáo</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body">
              <div class="md-form">
                <label for="date-picker">Chọn ngày</label>
                <input type="date" class="form-control" id="date">
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
              <button type="button" class="btn btn-primary" id="get-report">Hiển thị báo cáo</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- common function -->
  <script>
    const getNestedValue = (obj) => {
      var value = obj ? (obj.value !== '' ? obj.value : '-') : '-'
      return value
    }

    const getCustomArray = (array, keys, index) => {
      var abc = _(array).groupBy('itemType').map((objs, key) => {
        return {
          itemType: key,
          presentValue: _.sum(_(objs).groupBy('contractId').map((objs2, key) => {
            return objs2.map(obj => {
              return obj.presentValue
            }).pop()
          }).value()),
          array: _(objs).groupBy('storeId').map((objects, key) => {
            // console.log('objects abcdef: ', objects)
            return {
              storeId: key,
              receipts: _(objects).flatMap('array').groupBy('receiptId').map((objects, key) => {
                switch (index) {
                  case 1:
                    var def = _.zipObject(keys, keys.map(key => _.sum(_.map(objects, key))))
                    return { receiptId: key, value: def.paid }

                    break;
                  case 2:
                    var def = objects.length
                    return { receiptId: key, value: def }
                    break

                  default:
                    var def = _.zipObject(keys, keys.map(key => _.sum(_.map(objects, key))))
                    return { receiptId: key, value: def.paid }
                    break;
                }
              }).value()
            }
          }).value()
        }
      }).value()
      return abc
    }

  </script>

  <!-- handle open modal -->
  <script>
    const stores = JSON.parse('<%-JSON.stringify(stores)%>')
    console.log('stores: ', stores)
    if (stores.length !== 0) {

      for (var i = 1; i <= 2; i++) {
        stores.forEach(store => {
          var th = document.createElement('th')
          th.innerHTML = store.storeName
          switch (i) {
            case 1:
              th.className = 'daily'
              break;
            case 2:
              th.className = 'monthly'
              break;
            case 3:
              th.className = 'total'
              break;

            default:
              break;
          }
          th.id = store.storeId
          var thClone = th.cloneNode(true)
          var thClone2 = th.cloneNode(true)
          var thClone3 = th.cloneNode(true)
          var thClone4 = th.cloneNode(true)
          var thClone5 = th.cloneNode(true)
          var thClone6 = th.cloneNode(true)
          var thClone7 = th.cloneNode(true)
          var thClone8 = th.cloneNode(true)

          document.querySelector('table#money-report-table.C-Giải-ngân-mới thead tr').appendChild(thClone);
          document.querySelector('table#case-report-table.C-Giải-ngân-mới thead tr').appendChild(thClone2)
          document.querySelector('table#money-report-table.T-Gốc thead tr').appendChild(thClone3)
          document.querySelector('table#case-report-table.T-Gốc thead tr').appendChild(thClone4)
          document.querySelector('table#money-report-table.T-Lãi thead tr').appendChild(thClone5)
          document.querySelector('table#case-report-table.T-Lãi thead tr').appendChild(thClone6)
          document.querySelector('table#money-report-table.presentValue thead tr').appendChild(thClone7)
        })

      }
    }
    document.querySelector('button#choose-date').addEventListener('click', (event) => {
      $('#myModal').modal('show')
    })
  </script>

  <!-- handle display report button clicked -->
  <script type="module">
    import { makeRequest } from '/makeRequest.js'
    import { findNestedObj } from '/findNestedObj.js'
    import { exportHTMLTableToExcel } from '/exportHTMLTableToExcel.js'

    const displayTable = (array, query1, query2, query3, keyToFind, index) => {
      array.forEach(report => {
        var tr = null
        if (!document.querySelector(`${query3} th.${report.itemType}`)) {
          tr = document.createElement('tr')
          var th = document.createElement('th')
          th.innerHTML = report.itemType
          th.className = report.itemType
          tr.appendChild(th)

        } else {
          tr = document.querySelector(`${query3} th.${report.itemType}`).closest('tr')
        }
        document.querySelectorAll(query1).forEach(element => {
          var th = document.createElement('th')
          th.className = report.itemType
          var store = findNestedObj(report.array, 'storeId', element.id)
          if (store) {
            switch (index) {
              case (1):
                th.innerHTML = getNestedValue(findNestedObj(store.receipts, 'receiptId', keyToFind)).toLocaleString()

                break;
              case (2):
                th.innerHTML = report.presentValue.toLocaleString()
                break

              default:
                th.innerHTML = getNestedValue(findNestedObj(store.receipts, 'receiptId', keyToFind)).toLocaleString()
                break;
            }
          } else {
            th.innerHTML = '-'
          }
          tr.appendChild(th)
        })
        if (!document.querySelector(`${query3} th.${report.itemType}`)) {
          document.querySelector(query2).appendChild(tr)

        }

      })
    }

    const calculateSum = () => {
      document.querySelectorAll('table').forEach(table => {
        table.querySelectorAll('tbody tr').forEach(tr => {
          var sum = 0
          tr.querySelectorAll('th').forEach(th => {
            console.log('value of th: ', th.textContent)
            sum += parseFloat(th.textContent) ? parseFloat(th.textContent.split(',').join('')) : 0
          })
          var th = document.createElement('th')
          th.innerHTML = sum.toLocaleString()
          tr.appendChild(th)
        })
      })

    }

    document.querySelector('button#get-report').addEventListener('click', (event) => {
      const obj = {}
      document.querySelectorAll('.modal .modal-body input').forEach(element => {
        obj[element.id] = element.value
      })
      console.log('obj: ', obj)
      makeRequest('POST', 'statisticReport/getReport', 'application/json', JSON.stringify(obj), (result) => {
        let keys = ['root', 'paid', 'remain']
        var dailyMoneyReport = getCustomArray(result.dailyMoneyReport, keys)
        console.log('daily money report: ', dailyMoneyReport)
        var monthlyMoneyReport = getCustomArray(result.monthlyMoneyReport, keys)
        console.log('monthly money report: ', monthlyMoneyReport)
        var dailyCaseReport = getCustomArray(result.dailyMoneyReport, keys, 2)
        console.log('daily case report: ', dailyCaseReport)
        var monthlyCaseReport = getCustomArray(result.monthlyMoneyReport, keys, 2)
        console.log('monthly case report: ', monthlyCaseReport)

        document.querySelectorAll('table tbody').forEach(tbody => {
          tbody.innerHTML = ''
        })

        // create table header based on number of store id
        // document.querySelectorAll('table#money-report-table thead th:not(.static)').forEach(element => {
        //   element.closest('tr').removeChild(element)
        // })
        displayTable(dailyMoneyReport, 'table#money-report-table.C-Giải-ngân-mới thead th.daily',
          'table#money-report-table.C-Giải-ngân-mới tbody', 'table#money-report-table.C-Giải-ngân-mới tbody', 'C-Giải ngân mới')
        displayTable(monthlyMoneyReport, 'table#money-report-table.C-Giải-ngân-mới thead th.monthly',
          'table#money-report-table.C-Giải-ngân-mới tbody', 'table#money-report-table.C-Giải-ngân-mới tbody', 'C-Giải ngân mới')

        displayTable(dailyCaseReport, 'table#case-report-table.C-Giải-ngân-mới thead th.daily',
          'table#case-report-table.C-Giải-ngân-mới tbody', 'table#case-report-table.C-Giải-ngân-mới tbody', 'C-Giải ngân mới')
        displayTable(monthlyCaseReport, 'table#case-report-table.C-Giải-ngân-mới thead th.monthly',
          'table#case-report-table.C-Giải-ngân-mới tbody', 'table#case-report-table.C-Giải-ngân-mới tbody', 'C-Giải ngân mới')

        displayTable(dailyMoneyReport, 'table#money-report-table.T-Gốc thead th.daily',
          'table#money-report-table.T-Gốc tbody', 'table#money-report-table.T-Gốc tbody', 'T-Gốc')
        displayTable(monthlyMoneyReport, 'table#money-report-table.T-Gốc thead th.monthly',
          'table#money-report-table.T-Gốc tbody', 'table#money-report-table.T-Gốc tbody', 'T-Gốc')

        displayTable(dailyCaseReport, 'table#case-report-table.T-Gốc thead th.daily',
          'table#case-report-table.T-Gốc tbody', 'table#case-report-table.T-Gốc tbody', 'T-Gốc')
        displayTable(monthlyCaseReport, 'table#case-report-table.T-Gốc thead th.monthly',
          'table#case-report-table.T-Gốc tbody', 'table#case-report-table.T-Gốc tbody', 'T-Gốc')

        displayTable(dailyMoneyReport, 'table#money-report-table.T-Lãi thead th.daily',
          'table#money-report-table.T-Lãi tbody', 'table#money-report-table.T-Lãi tbody', 'T-Lãi')
        displayTable(monthlyMoneyReport, 'table#money-report-table.T-Lãi thead th.monthly',
          'table#money-report-table.T-Lãi tbody', 'table#money-report-table.T-Lãi tbody', 'T-Lãi')

        displayTable(dailyCaseReport, 'table#case-report-table.T-Lãi thead th.daily',
          'table#case-report-table.T-Lãi tbody', 'table#case-report-table.T-Lãi tbody', 'T-Lãi')
        displayTable(monthlyCaseReport, 'table#case-report-table.T-Lãi thead th.monthly',
          'table#case-report-table.T-Lãi tbody', 'table#case-report-table.T-Lãi tbody', 'T-Lãi')

        displayTable(dailyMoneyReport, 'table#money-report-table.presentValue thead th.daily',
          'table#money-report-table.presentValue tbody', 'table#money-report-table.presentValue tbody', 'presentValue', 2)
        displayTable(monthlyMoneyReport, 'table#money-report-table.presentValue thead th.monthly',
          'table#money-report-table.presentValue tbody', 'table#money-report-table.presentValue tbody', 'presentValue', 2)

        // calculate sum of rows
        calculateSum()

        $('#myModal').modal('hide')

      })

    })

    document.querySelector('button#export').addEventListener('click', event => {
      exportHTMLTableToExcel(['table1', 'table2', 'tableBreak1', 'table3',
        'table4', 'tableBreak2', 'table5', 'table6', 'tableBreak3', 'table7', 'tableBreak4',],
        `Thống_kê_báo_cáo_${new Date(Date.now()).toLocaleDateString()}`)
    })

  </script>



</body>

</html>