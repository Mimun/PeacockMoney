<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <style>
    .md-form {
      margin-bottom: 16px;
    }
  </style>
</head>

<body>
  <%- include('../Components/navbar.ejs') %>
  <div class="d-flex" id="wrapper">
    <%- include('../Components/sideBar.ejs') %>
    <div id="page-content-wrapper">
      <h2>Báo cáo tiền PGD</h2>
      <div class="d-flex align-items-end justify-content-between" style="width: 500px;">
        <button class="btn btn-sm btn-primary" id="choose-date">Chọn ngày báo cáo</button>
        <button class="btn btn-sm btn-primary" id="export">Export Excel</button>
        <div class="form-group">
          <label for="display-date" class="bmd-label-floating">Ngày đã chọn</label>
          <input type="text" class="form-control" id="display-date">
        </div>
      </div>

      <div class="note-container">
        <div class="container">
          <div class="row">
            <div class="col">
              <div class="box daily"></div><span>Daily</span>
            </div>
            <div class="col">
              <div class="box monthly"></div><span>Monthly</span>

            </div>
            <!-- <div class="col">
              <div class="box total"></div><span>Total</span>

            </div> -->

          </div>
        </div>
      </div>
      <div class="table-container">
        <table class="table table-bordered table-striped table-hover money-table" id="money-table">
          <thead>
            <tr>
              <th></th>
              <th colspan="2">Daily</th>
              <th colspan="2">Monthly</th>
            </tr>
            <tr>
              <th class="calculate static">Số tiền giải ngân</th>
              <th class="calculate daily" id="T-">Thu</th>
              <th class="calculate daily" id="C-">Chi</th>
              <th class="calculate monthly" id="T-">Thu</th>
              <th class="calculate monthly" id="C-">Chi</th>
            </tr>
          </thead>
          <tbody>
            <tr id="Gốc">
              <th class="static">Gốc</th>
            </tr>
            <tr id="Lãi">
              <th class="static">Lãi</th>
            </tr>
            <tr id="Giải ngân mới">
              <th class="static">Giải ngân</th>
            </tr>
            <tr id="Chuyển NB">
              <th class="static">Chuyển NB</th>
            </tr>
            <tr id="Phí khác">
              <th class="static">Phí khác</th>
            </tr>
            <tr id="Nhận NB">
              <th class="static">Nhận NB</th>
            </tr>
            <tr id="Phạt">
              <th class="static">Phạt</th>
            </tr>
            <!-- <tr id="Total">
              <th class="static">Total</th>
            </tr> -->
          </tbody>
        </table>
      </div>
      <div class="table-container">
        <table class="table table-bordered table-striped table-hover case-table" id="case-table">
          <thead>
            <tr>
              <th></th>
              <th colspan="2">Daily</th>
              <th colspan="2">Monthly</th>
            </tr>
            <tr>
              <th class="calculate static">Số vụ vay</th>
              <th class="calculate daily" id="T-">Thu</th>
              <th class="calculate daily" id="C-">Chi</th>
              <th class="calculate monthly" id="T-">Thu</th>
              <th class="calculate monthly" id="C-">Chi</th>
            </tr>
          </thead>
          <tbody>
            <tr id="Gốc">
              <th class="static">Gốc</th>
            </tr>
            <tr id="Lãi">
              <th class="static">Lãi</th>
            </tr>
            <tr id="Giải ngân mới">
              <th class="static">Giải ngân</th>
            </tr>
            <tr id="Chuyển NB">
              <th class="static">Chuyển NB</th>
            </tr>
            <tr id="Phí khác">
              <th class="static">Phí khác</th>
            </tr>
            <tr id="Nhận NB">
              <th class="static">Nhận NB</th>
            </tr>
            <tr id="Phạt">
              <th class="static">Phạt</th>
            </tr>
          </tbody>
        </table>
      </div>
      <div class="table-container">
        <table class="table table-bordered table-striped table-hover total-table" id="total-table">
          <thead>
            <tr>
              <th></th>
              <th colspan="2">Daily</th>
              <th colspan="2">Monthly</th>
            </tr>
            <tr>
              <th class="calculate static">Số vụ vay</th>
              <th class="calculate daily" id="T-">Thu</th>
              <th class="calculate daily" id="C-">Chi</th>
              <th class="calculate monthly" id="T-">Thu</th>
              <th class="calculate monthly" id="C-">Chi</th>
            </tr>
          </thead>
          <tbody>
            <tr id="1">
              <th class="static">Cash</th>
            </tr>
            <tr id="2">
              <th class="static">Bank</th>
            </tr>
          </tbody>
        </table>
      </div>

      <!-- Modal -->
      <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="exampleModalLabel">Chọn ngày và cửa hàng báo cáo</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body">
              <div class="md-form">
                <label for="date-picker">Chọn ngày</label>
                <input type="date" class="form-control" id="date">
              </div>
              <div class="md-form">
                <label for="store-picker">Chọn cửa hàng</label>
                <select name="" id="store" class="browser-default custom-select store-picker"></select>
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
              <button type="button" class="btn btn-primary" id="get-report">Hiển thị báo cáo</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- common function -->
  <script>
    const getNestedValue = (obj) => {
      var value = obj ? (obj.value !== '' ? obj.value : 'None') : 'None'
      return value
    }
  </script>

  <!-- handle open modal -->
  <script>
    document.querySelector('button#choose-date').addEventListener('click', (event) => {
      $('#myModal').modal('show')
    })
  </script>

  <!-- display store selector -->
  <script type="module">
    import { findNestedObj } from '/findNestedObj.js'

    var stores = JSON.parse('<%- JSON.stringify(stores)%>')
    console.log('store: ', stores)
    if (stores.length !== 0) {
      stores.forEach(store => {
        console.log('abc; ', getNestedValue(findNestedObj(store.metadata, 'name', 'name')))
        var option = document.createElement('option')
        option.value = store._id
        option.innerHTML = `${getNestedValue(findNestedObj(store.metadata, 'name', 'name'))} - ${getNestedValue(findNestedObj(store.metadata, 'name', 'id'))}`
        document.querySelector('select#store').appendChild(option)
      });
    }
  </script>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.15/lodash.min.js"> </script>
  <!-- handle after picking date -->
  <script type="module">
    import { makeRequest } from '/makeRequest.js'
    import { findNestedObj } from '/findNestedObj.js'
    import { exportHTMLTableToExcel } from '/exportHTMLTableToExcel.js'

    var dailyMoneyReport = JSON.parse('<%- JSON.stringify(dailyMoneyReport)%>')
    console.log('daily money report: ', dailyMoneyReport)
    var monthlyMoneyReport = JSON.parse('<%- JSON.stringify(monthlyMoneyReport)%>')
    console.log('monthly money report: ', monthlyMoneyReport)

    document.querySelector('input#display-date').value = new Date(Date.now()).toLocaleDateString()

    const createCustomObj = (array, keys, index, groupBy = 'receiptId') => {
      var customObj = _(array).flatMap('array').groupBy(groupBy).
        map((objs, key) => {
          switch (index) {
            case (1):
              var def = _.zipObject(keys, keys.map(key => _.sum(_.map(objs, key))))
              return { receiptType: groupBy === 'receiptId' ? key : (key === '1' ? `T-${key}` : `C-${key}`), paid: def.paid }
              break;
            case (2):
              return { receiptType: groupBy === 'receiptId' ? key : (key === '1' ? `T-${key}` : `C-${key}`), cases: objs.length }
              break;
            default:
              break;
          }
        }).value()
      return customObj
    }

    const displayTable = (query1, query2, array, keyIndex) => {
      document.querySelectorAll(query1).forEach(element1 => {
        document.querySelectorAll(query2).forEach(element2 => {
          var receiptId = `${element1.id}${element2.id}`
          var obj = findNestedObj(array, 'receiptType', receiptId)
          var th = document.createElement('th')

          switch (keyIndex) {
            case (1):
              th.innerHTML = obj ? obj.paid.toLocaleString() : '-'

              break;
            case (2):
              th.innerHTML = obj ? obj.cases.toLocaleString() : '-'

              break;

            default:
              break;
          }
          element2.appendChild(th)
        })
      })
    }

    const calculateRowSum = () => {
      document.querySelectorAll('table').forEach(table => {
        table.querySelectorAll('tbody tr').forEach(tr => {
          var sum = 0
          tr.querySelectorAll('th').forEach(th => {
            console.log('value of th: ', th.textContent)
            sum += parseFloat(th.textContent) ? parseFloat(th.textContent.split(',').join('')) : 0
          })
          var th = document.createElement('th')
          th.innerHTML = sum.toLocaleString()
          tr.appendChild(th)
        })
      })

    }

    const calculateColumnSum = (query) => {
      document.querySelector(`${query} tbody`).removeChild(document.querySelector(`${query} tbody`).lastChild)
      var tr = document.createElement('tr')
      document.querySelectorAll(`${query} thead th.calculate`).forEach((element, index) => {
        var th = document.createElement('th')
        if (index === 0) {
          th.innerHTML = 'Total'

        } else {
          var sum = 0
          document.querySelectorAll(`${query} tbody tr`).forEach(tr => {
            sum += parseFloat(tr.querySelectorAll('th')[index].textContent) ?
              parseFloat(tr.querySelectorAll('th')[index].textContent.split(',').join('')) : 0

          })
          th.innerHTML = sum.toLocaleString()
          tr.appendChild(th)
        }
        tr.appendChild(th)

      })
      document.querySelector(`${query} tbody`).appendChild(tr)

    }

    const handleReportArray = (dailyMoneyReport, monthlyMoneyReport) => {
      let keys = ['root', 'paid', 'remain']
      const customDailyMoneyReport = createCustomObj(dailyMoneyReport, keys, 1)
      const customMonthlyMoneyReport = createCustomObj(monthlyMoneyReport, keys, 1)
      const customDailyCaseReport = createCustomObj(dailyMoneyReport, keys, 2)
      const customMonthlyCaseReport = createCustomObj(monthlyMoneyReport, keys, 2)
      const customTotalDailyMoneyReport = createCustomObj(dailyMoneyReport, keys, 1, 'receiptType')
      const customTotalMonthlyMoneyReport = createCustomObj(monthlyMoneyReport, keys, 1, 'receiptType')

      console.log('obj: ', {
        customDailyMoneyReport, customMonthlyMoneyReport,
        customDailyCaseReport, customMonthlyCaseReport,
        customTotalDailyMoneyReport, customTotalMonthlyMoneyReport
      })

      // remove old th 
      document.querySelectorAll('table.money-table tbody th:not(.static)').forEach(element => {
        element.closest('tr').removeChild(element)
      })

      // render daily and monthly
      displayTable('table.money-table thead th.daily', 'table.money-table tbody tr', customDailyMoneyReport, 1)
      displayTable('table.money-table thead th.monthly', 'table.money-table tbody tr', customMonthlyMoneyReport, 1)

      document.querySelectorAll('table.case-table tbody th:not(.static)').forEach(element => {
        element.closest('tr').removeChild(element)
      })

      // render daily and monthly
      displayTable('table.case-table thead th.daily', 'table.case-table tbody tr', customDailyCaseReport, 2)
      displayTable('table.case-table thead th.monthly', 'table.case-table tbody tr', customMonthlyCaseReport, 2)

      displayTable('table.total-table thead th.daily', 'table.total-table tbody tr', customTotalDailyMoneyReport, 1)
      displayTable('table.total-table thead th.monthly', 'table.total-table tbody tr', customTotalMonthlyMoneyReport, 1)

      calculateColumnSum('table.money-table')
      calculateColumnSum('table.case-table')
      calculateColumnSum('table.total-table')

    }

    // handleReportArray(dailyMoneyReport, monthlyMoneyReport)

    // choose date to get report
    document.querySelector('button#get-report').addEventListener('click', (event) => {
      const obj = {}
      document.querySelectorAll('.modal .modal-body input, .modal-body select ').forEach(element => {
        obj[element.id] = element.value
      })
      console.log('obj: ', obj)
      makeRequest('POST', 'moneyReport/getReport', 'application/json', JSON.stringify(obj), (result) => {
        var dailyMoneyReport = result.dailyMoneyReport
        var monthlyMoneyReport = result.monthlyMoneyReport
        handleReportArray(dailyMoneyReport, monthlyMoneyReport)
        document.querySelector('input#display-date').value = new Date(document.querySelector('input#date').value).toLocaleDateString()

        $('#myModal').modal('hide')

      })
    })

    document.querySelector('button#export').addEventListener('click', event => {
      exportHTMLTableToExcel(['money-table', 'case-table'], `Báo_cáo_tiền_PGD_${new Date(Date.now()).toLocaleDateString()}`)
    })

  </script>
</body>

</html>